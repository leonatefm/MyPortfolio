/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

.topnav, .home, .home .left-loop, .home .right-loop, .about {
  *zoom: 1; }
  .topnav:before, .home:before, .home .left-loop:before, .home .right-loop:before, .about:before, .topnav:after, .home:after, .home .left-loop:after, .home .right-loop:after, .about:after {
    content: " ";
    display: table; }
  .topnav:after, .home:after, .home .left-loop:after, .home .right-loop:after, .about:after {
    clear: both; }

html {
  font-family: 'Helvetica Neue', Helvetica, Arial, Roboto, sans-serif;
  font-size: 16px;
  line-height: 1.5;
  color: #121212; }

.modal-open {
  overflow: hidden; }

h1 {
  font-size: 56px;
  margin: 0; }
  @media only screen and (max-width: 768px) {
    h1 {
      font-size: 32px; } }

h2 {
  font-size: 28px;
  margin: 0;
  font-weight: 500; }
  @media only screen and (max-width: 768px) {
    h2 {
      font-size: 20px; } }

h3 {
  font-size: 24px;
  margin: 0;
  font-weight: 500; }
  @media only screen and (max-width: 768px) {
    h3 {
      font-size: 18px; } }

h4 {
  font-size: 20px;
  margin: 0;
  font-weight: 400; }
  @media only screen and (max-width: 768px) {
    h4 {
      font-size: 16px; } }

h5 {
  font-size: 16px;
  margin: 0;
  font-weight: 400; }

h6 {
  font-size: 12px;
  margin: 0;
  font-weight: 400; }

a {
  color: inherit;
  text-decoration: none; }

a.textlink {
  position: relative;
  overflow: hidden;
  display: inline-block; }
  a.textlink:before {
    content: "";
    width: 100%;
    height: 1px;
    background-color: #121212;
    position: absolute;
    left: 0;
    bottom: -2px;
    opacity: 0;
    filter: alpha(opacity=0);
    -webkit-transition: all 0.3s ease-in-out;
    transition: all 0.3s ease-in-out; }
  a.textlink:hover:before {
    opacity: 1;
    filter: alpha(opacity=100);
    bottom: 2px; }
  @media only screen and (max-width: 768px) {
    a.textlink:before {
      opacity: 1;
      filter: alpha(opacity=100);
      bottom: 2px; } }

.button {
  border: 1px solid #121212;
  line-height: 48px;
  font-weight: 300;
  padding: 0 50px;
  background-color: transparent;
  outline: none;
  position: relative;
  -webkit-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out; }
  .button:hover {
    background-color: #121212;
    color: #FFFFFF; }

.button.appstore {
  padding: 0 40px 0 70px; }
  .button.appstore span.icon {
    font-size: 32px;
    margin: 0 8px;
    position: absolute;
    top: 0;
    left: 30px; }

@-webkit-keyframes shine {
  0% {
    color: rgba(255, 255, 255, 0.8);
    text-shadow: 0 0px 15px rgba(0, 0, 0, 0.9); }
  50% {
    color: white;
    text-shadow: 0 1px 15px rgba(255, 255, 255, 0.9); }
  100% {
    color: rgba(255, 255, 255, 0.8);
    text-shadow: 0 0px 15px rgba(0, 0, 0, 0.9); } }

@keyframes shine {
  0% {
    color: rgba(255, 255, 255, 0.8);
    text-shadow: 0 0px 15px rgba(0, 0, 0, 0.9); }
  50% {
    color: white;
    text-shadow: 0 1px 15px rgba(255, 255, 255, 0.9); }
  100% {
    color: rgba(255, 255, 255, 0.8);
    text-shadow: 0 0px 15px rgba(0, 0, 0, 0.9); } }

.topnav {
  width: 100%;
  height: 70px;
  position: fixed;
  top: 0px;
  z-index: 500; }
  @media only screen and (max-width: 768px) {
    .topnav {
      height: 50px; } }
  .topnav .leftdiv {
    width: 50%;
    height: inherit;
    float: left;
    background-color: #FFFFFF;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center; }
    .topnav .leftdiv .logo {
      width: 36px;
      height: 36px;
      display: inline-block;
      margin: 0 15px 0 40px;
      fill: #121212; }
      @media only screen and (max-width: 768px) {
        .topnav .leftdiv .logo {
          width: 24px;
          height: 24px;
          margin: 0 10px 0 20px; } }
    .topnav .leftdiv h3 {
      line-height: 70px;
      display: inline-block; }
      .topnav .leftdiv h3 span {
        font-weight: 300; }
      @media only screen and (max-width: 768px) {
        .topnav .leftdiv h3 {
          line-height: 50px; } }
  .topnav .rightdiv {
    width: 50%;
    height: inherit;
    float: left;
    background-color: #121212;
    color: #FFFFFF; }
    .topnav .rightdiv nav {
      float: right;
      margin-right: 40px; }
      .topnav .rightdiv nav a {
        font-weight: 300;
        line-height: 70px;
        margin-left: 40px;
        display: inline-block;
        overflow: hidden;
        position: relative;
        opacity: 0.8;
        filter: alpha(opacity=80);
        -webkit-transition: all 0.3s ease-in-out;
        transition: all 0.3s ease-in-out; }
        .topnav .rightdiv nav a:before {
          content: "";
          width: 100%;
          height: 1px;
          background-color: #FFFFFF;
          position: absolute;
          left: 0;
          bottom: 14px;
          opacity: 0;
          filter: alpha(opacity=0);
          -webkit-transition: all 0.3s ease-in-out;
          transition: all 0.3s ease-in-out; }
        .topnav .rightdiv nav a:hover {
          opacity: 1;
          filter: alpha(opacity=100); }
          .topnav .rightdiv nav a:hover:before {
            opacity: 1;
            filter: alpha(opacity=100);
            bottom: 20px; }
      @media only screen and (max-width: 768px) {
        .topnav .rightdiv nav {
          display: none; } }
    .topnav .rightdiv a.icon {
      font-size: 32px;
      line-height: 50px;
      float: right;
      padding: 0 20px;
      display: none; }
      @media only screen and (max-width: 768px) {
        .topnav .rightdiv a.icon {
          display: inline-block; } }

.home {
  width: 100%;
  height: 100vh;
  min-height: 600px;
  position: fixed;
  top: 0px;
  z-index: 100; }
  .home h1 {
    margin-top: 20vh;
    font-weight: 300;
    line-height: 1.2; }
    @media only screen and (max-width: 768px) {
      .home h1 {
        margin-top: 0;
        position: absolute;
        top: 20%;
        line-height: 1.5; } }
  .home p {
    margin-top: 20vh;
    font-weight: 300;
    padding: 0 30px; }
    @media only screen and (max-width: 768px) {
      .home p {
        display: none; } }
  .home h5 {
    margin-top: 10vh;
    font-weight: 300; }
    @media only screen and (max-width: 768px) {
      .home h5 {
        display: none; } }
  .home .leftdiv {
    width: 50%;
    height: inherit;
    min-height: 600px;
    float: left;
    background-color: #FFFFFF;
    position: relative;
    overflow: hidden; }
    .home .leftdiv img {
      height: 100%;
      min-height: 600px;
      position: absolute;
      z-index: 0;
      opacity: 0.8;
      filter: alpha(opacity=80); }
    .home .leftdiv h1 {
      text-align: right;
      padding: 0 30px 0 18px;
      position: relative;
      z-index: 100; }
    .home .leftdiv p {
      text-align: right; }
    .home .leftdiv h5 {
      text-align: right; }
  .home .rightdiv {
    width: 50%;
    height: inherit;
    min-height: 600px;
    float: left;
    background-color: #121212;
    color: #FFFFFF;
    position: relative;
    overflow: hidden; }
    .home .rightdiv img {
      height: 100%;
      min-height: 600px;
      position: absolute;
      right: 0;
      z-index: 0;
      opacity: 0.8;
      filter: alpha(opacity=80); }
    .home .rightdiv h1 {
      text-align: left;
      padding-left: 30px; }
    .home .rightdiv p {
      text-align: left; }
    .home .rightdiv h5 {
      text-align: left; }
  .home .left-loop {
    margin-right: -55px;
    margin-top: 60px; }
    @media only screen and (max-width: 768px) {
      .home .left-loop {
        margin: 0;
        position: absolute;
        right: -55px;
        top: 60%; } }
    .home .left-loop svg {
      float: right; }
    .home .left-loop path {
      fill: none;
      stroke: #121212;
      stroke-width: 8px; }
    .home .left-loop circle {
      fill: #FFFFFF; }
  .home .right-loop {
    margin-left: -55px;
    margin-top: 60px; }
    @media only screen and (max-width: 768px) {
      .home .right-loop {
        margin: 0;
        position: absolute;
        left: -55px;
        top: 60%; } }
    .home .right-loop svg {
      float: left; }
    .home .right-loop path {
      fill: none;
      stroke: #FFFFFF;
      stroke-width: 8px; }
    .home .right-loop circle {
      stroke-width: 1px;
      stroke: #121212;
      fill: #121212; }

.projects {
  margin-top: 100vh;
  position: relative;
  z-index: 200; }
  .projects ul.projects-list {
    list-style-type: none;
    margin: 0;
    padding: 0; }
    .projects ul.projects-list li {
      width: 100%;
      height: 300px;
      color: #FFFFFF;
      cursor: pointer; }
      @media only screen and (max-width: 768px) {
        .projects ul.projects-list li {
          height: 200px; } }
      .projects ul.projects-list li h4.org {
        padding: 25px 40px;
        text-align: right;
        font-weight: 400; }
        @media only screen and (max-width: 768px) {
          .projects ul.projects-list li h4.org {
            padding: 20px 20px; } }
      .projects ul.projects-list li h1 {
        padding-top: 0px;
        text-align: center; }
      .projects ul.projects-list li h4.role {
        padding-top: 20px;
        text-align: center;
        font-weight: 300; }
        @media only screen and (max-width: 768px) {
          .projects ul.projects-list li h4.role {
            padding-top: 10px; } }
      .projects ul.projects-list li:hover h1 {
        -webkit-animation: shine ease 3s infinite;
        animation: shine ease 3s infinite; }
    .projects ul.projects-list li:nth-child(1) {
      background: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.5)), to(rgba(0, 0, 0, 0.5))), url("../images/siq4l.jpg") center 0% no-repeat;
      background: -webkit-linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("../images/siq4l.jpg") center 0% no-repeat;
      background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("../images/siq4l.jpg") center 0% no-repeat;
      background-size: 100%; }
    .projects ul.projects-list li:nth-child(2) {
      background: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.5)), to(rgba(0, 0, 0, 0.5))), url("../images/me.jpg") center 10% no-repeat;
      background: -webkit-linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("../images/me.jpg") center 10% no-repeat;
      background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("../images/me.jpg") center 10% no-repeat;
      background-size: 100%; }
    .projects ul.projects-list li:nth-child(3) {
      background: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.5)), to(rgba(0, 0, 0, 0.5))), url("../images/sm.jpg") center 10% no-repeat;
      background: -webkit-linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("../images/sm.jpg") center 10% no-repeat;
      background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("../images/sm.jpg") center 10% no-repeat;
      background-size: 100%; }

.projects-modal {
  height: 100vh;
  width: 100%;
  position: fixed;
  top: 0px;
  left: 0px;
  overflow: hidden;
  z-index: 900;
  background-color: #121212;
  display: none;
  opacity: 0;
  filter: alpha(opacity=0);
  -webkit-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out; }

.projects-modal.show {
  opacity: 0.7;
  filter: alpha(opacity=70); }

.project-detail-list {
  list-style-type: none;
  padding: 0;
  margin: 0;
  height: 100vh;
  width: 100%;
  position: fixed;
  top: 0px;
  left: 0px;
  z-index: 1000;
  display: none; }
  .project-detail-list .project-detail {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    display: none; }
    .project-detail-list .project-detail .leftdiv {
      width: 62.5%;
      height: inherit;
      overflow: auto;
      position: absolute;
      top: 0;
      left: -62.5%;
      -webkit-transition: all 0.6s ease;
      transition: all 0.6s ease; }
      .project-detail-list .project-detail .leftdiv ul {
        list-style-type: none;
        padding: 60px 40px;
        margin: 0; }
        .project-detail-list .project-detail .leftdiv ul li {
          margin: 0 auto 10px;
          text-align: center; }
          .project-detail-list .project-detail .leftdiv ul li img {
            width: 100%; }
          .project-detail-list .project-detail .leftdiv ul li img.vertical {
            width: 50%; }
      @media only screen and (max-width: 768px) {
        .project-detail-list .project-detail .leftdiv {
          display: none; } }
    .project-detail-list .project-detail .leftdiv.show {
      left: 0; }
    .project-detail-list .project-detail .rightdiv {
      width: 37.5%;
      height: inherit;
      overflow: scroll;
      background-color: #FFFFFF;
      position: absolute;
      top: 0;
      right: -37.5%;
      -webkit-transition: all 0.6s ease;
      transition: all 0.6s ease; }
      .project-detail-list .project-detail .rightdiv h2 {
        color: #121212;
        margin: 60px 40px 10px; }
      .project-detail-list .project-detail .rightdiv h5 {
        margin: 0 40px 30px; }
      .project-detail-list .project-detail .rightdiv p {
        margin: 10px 40px;
        font-weight: 300;
        line-height: 2; }
      .project-detail-list .project-detail .rightdiv p:first-child {
        padding-bottom: 60px; }
      .project-detail-list .project-detail .rightdiv p.button-link {
        padding: 20px 0;
        text-align: left; }
      .project-detail-list .project-detail .rightdiv a.button {
        display: inline-block; }
      .project-detail-list .project-detail .rightdiv span.close-modal {
        font-size: 56px;
        color: #979797;
        position: absolute;
        top: 0;
        right: 40px;
        cursor: pointer; }
        .project-detail-list .project-detail .rightdiv span.close-modal:hover {
          color: #121212; }
      .project-detail-list .project-detail .rightdiv ul {
        display: none;
        list-style-type: none;
        padding: 40px 40px;
        margin: 0; }
        .project-detail-list .project-detail .rightdiv ul li {
          margin: 0 auto 10px;
          -webkit-box-shadow: 0px 0px 3px rgba(0, 0, 0, 0.15);
          box-shadow: 0px 0px 3px rgba(0, 0, 0, 0.15); }
          .project-detail-list .project-detail .rightdiv ul li img {
            width: 100%; }
      @media only screen and (max-width: 768px) {
        .project-detail-list .project-detail .rightdiv {
          width: 100%;
          right: -100%; }
          .project-detail-list .project-detail .rightdiv ul {
            display: block; }
          .project-detail-list .project-detail .rightdiv p.button-link {
            text-align: center; } }
    .project-detail-list .project-detail .rightdiv.show {
      right: 0; }
    .project-detail-list .project-detail .mobile-scrollable {
      -webkit-overflow-scrolling: touch; }

.about {
  position: relative;
  z-index: 200;
  height: 100%; }
  @media only screen and (max-width: 768px) {
    .about {
      height: auto; } }
  .about .leftdiv {
    width: 37.5%;
    height: 100%;
    min-height: 540px;
    float: left;
    background: url("../images/avatar.jpg") center center no-repeat;
    background-size: cover; }
    @media only screen and (max-width: 768px) {
      .about .leftdiv {
        display: none; } }
  .about .topdiv {
    display: none;
    width: 100%;
    padding: 50px 0;
    background-color: #FFFFFF; }
    .about .topdiv .wrapper {
      width: 200px;
      height: 200px;
      margin: auto;
      border-radius: 200px;
      border: 1px solid #979797; }
    .about .topdiv .avatar {
      width: 180px;
      height: 180px;
      margin: 10px auto;
      border-radius: 180px;
      background: url("../images/avatar.jpg") center center no-repeat;
      background-size: auto 100%; }
    @media only screen and (max-width: 768px) {
      .about .topdiv {
        display: block; } }
  .about .rightdiv {
    width: 62.5%;
    height: auto;
    text-align: center;
    min-height: 500px;
    padding-bottom: 40px;
    float: left;
    background-color: #FFFFFF;
    position: relative; }
    @media only screen and (max-width: 768px) {
      .about .rightdiv {
        width: 100%;
        float: none; } }
    .about .rightdiv p {
      max-width: 640px;
      font-weight: 300;
      line-height: 2;
      text-align: left;
      margin: auto;
      padding: 60px 100px 0;
      position: relative; }
      .about .rightdiv p:before {
        content: url("../images/quote.svg");
        position: absolute;
        left: 18px; }
      @media only screen and (max-width: 768px) {
        .about .rightdiv p {
          padding: 60px 40px 0; }
          .about .rightdiv p:before {
            left: 50%;
            top: -20px;
            margin-left: -30px; } }
    .about .rightdiv .resume {
      display: inline-block;
      margin: 40px auto; }
    .about .rightdiv h5 {
      font-weight: 300;
      margin: 10px 0; }
    .about .rightdiv h2 {
      padding: 15px 0;
      font-size: 32px;
      color: #5A5A5A; }
      .about .rightdiv h2 a {
        margin: 0 15px; }
        .about .rightdiv h2 a:hover {
          color: #121212; }
    .about .rightdiv h6 {
      width: 100%;
      position: absolute;
      bottom: 15px; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlbmRvci9fbm9ybWFsaXplLnNjc3MiLCJpbml0LmNzcyIsInBhZ2VzL19tYWluLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNEVBQTRFO0FBRTVFOzs7O0dBSUc7QUFFSDtFQUNFLHdCQUF1QjtFQUFHLE9BQU87RUFDakMsMkJBQTBCO0VBQUcsT0FBTztFQUNwQywrQkFBOEI7RUFBRyxPQUFPLEVBQ3pDOztBQUVEOztHQUVHO0FBRUg7RUFDRSxVQUFTLEVBQ1Y7O0FBRUQ7Z0ZBQ2dGO0FBRWhGOzs7OztHQUtHO0FBRUg7Ozs7Ozs7Ozs7Ozs7RUFhRSxlQUFjLEVBQ2Y7O0FBRUQ7OztHQUdHO0FBRUg7Ozs7RUFJRSxzQkFBcUI7RUFBRyxPQUFPO0VBQy9CLHlCQUF3QjtFQUFHLE9BQU8sRUFDbkM7O0FBRUQ7OztHQUdHO0FBRUg7RUFDRSxjQUFhO0VBQ2IsVUFBUyxFQUNWOztBQUVEOzs7R0FHRztBQ05IOztFRFVFLGNBQWEsRUFDZDs7QUFFRDtnRkFDZ0Y7QUFFaEY7O0dBRUc7QUFFSDtFQUNFLDhCQUE2QixFQUM5Qjs7QUFFRDs7O0dBR0c7QUFFSDs7RUFFRSxXQUFVLEVBQ1g7O0FBRUQ7Z0ZBQ2dGO0FBRWhGOztHQUVHO0FBRUg7RUFDRSwwQkFBeUIsRUFDMUI7O0FBRUQ7O0dBRUc7QUFFSDs7RUFFRSxrQkFBaUIsRUFDbEI7O0FBRUQ7O0dBRUc7QUFFSDtFQUNFLG1CQUFrQixFQUNuQjs7QUFFRDs7O0dBR0c7QUFFSDtFQUNFLGVBQWM7RUFDZCxpQkFBZ0IsRUFDakI7O0FBRUQ7O0dBRUc7QUFFSDtFQUNFLGlCQUFnQjtFQUNoQixZQUFXLEVBQ1o7O0FBRUQ7O0dBRUc7QUFFSDtFQUNFLGVBQWMsRUFDZjs7QUFFRDs7R0FFRztBQUVIOztFQUVFLGVBQWM7RUFDZCxlQUFjO0VBQ2QsbUJBQWtCO0VBQ2xCLHlCQUF3QixFQUN6Qjs7QUFFRDtFQUNFLFlBQVcsRUFDWjs7QUFFRDtFQUNFLGdCQUFlLEVBQ2hCOztBQUVEO2dGQUNnRjtB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VztNQUNYLG1CQUFrQjtNQUNsQixhQUFZLEVBQ1oiLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qISBub3JtYWxpemUuY3NzIHYzLjAuMyB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cblxuLyoqXG4gKiAxLiBTZXQgZGVmYXVsdCBmb250IGZhbWlseSB0byBzYW5zLXNlcmlmLlxuICogMi4gUHJldmVudCBpT1MgYW5kIElFIHRleHQgc2l6ZSBhZGp1c3QgYWZ0ZXIgZGV2aWNlIG9yaWVudGF0aW9uIGNoYW5nZSxcbiAqICAgIHdpdGhvdXQgZGlzYWJsaW5nIHVzZXIgem9vbS5cbiAqL1xuXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7IC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIGRlZmF1bHQgbWFyZ2luLlxuICovXG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qIEhUTUw1IGRpc3BsYXkgZGVmaW5pdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGFueSBIVE1MNSBlbGVtZW50IGluIElFIDgvOS5cbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgZGV0YWlsc2Agb3IgYHN1bW1hcnlgIGluIElFIDEwLzExXG4gKiBhbmQgRmlyZWZveC5cbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgbWFpbmAgaW4gSUUgMTEuXG4gKi9cblxuYXJ0aWNsZSxcbmFzaWRlLFxuZGV0YWlscyxcbmZpZ2NhcHRpb24sXG5maWd1cmUsXG5mb290ZXIsXG5oZWFkZXIsXG5oZ3JvdXAsXG5tYWluLFxubWVudSxcbm5hdixcbnNlY3Rpb24sXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCBgaW5saW5lLWJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGluIElFIDgvOS5cbiAqIDIuIE5vcm1hbGl6ZSB2ZXJ0aWNhbCBhbGlnbm1lbnQgb2YgYHByb2dyZXNzYCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xuXG5hdWRpbyxcbmNhbnZhcyxcbnByb2dyZXNzLFxudmlkZW8ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IC8qIDEgKi9cbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyAvKiAyICovXG59XG5cbi8qKlxuICogUHJldmVudCBtb2Rlcm4gYnJvd3NlcnMgZnJvbSBkaXNwbGF5aW5nIGBhdWRpb2Agd2l0aG91dCBjb250cm9scy5cbiAqIFJlbW92ZSBleGNlc3MgaGVpZ2h0IGluIGlPUyA1IGRldmljZXMuXG4gKi9cblxuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgYFtoaWRkZW5dYCBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC5cbiAqIEhpZGUgdGhlIGB0ZW1wbGF0ZWAgZWxlbWVudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIEZpcmVmb3ggPCAyMi5cbiAqL1xuXG5baGlkZGVuXSxcbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuLyogTGlua3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgY29sb3IgZnJvbSBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cblxuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4vKipcbiAqIEltcHJvdmUgcmVhZGFiaWxpdHkgb2YgZm9jdXNlZCBlbGVtZW50cyB3aGVuIHRoZXkgYXJlIGFsc28gaW4gYW5cbiAqIGFjdGl2ZS9ob3ZlciBzdGF0ZS5cbiAqL1xuXG5hOmFjdGl2ZSxcbmE6aG92ZXIge1xuICBvdXRsaW5lOiAwO1xufVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LzEwLzExLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cblxuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiAxcHggZG90dGVkO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGUgc2V0IHRvIGBib2xkZXJgIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsaW5nIG5vdCBwcmVzZW50IGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuICovXG5cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHZhcmlhYmxlIGBoMWAgZm9udC1zaXplIGFuZCBtYXJnaW4gd2l0aGluIGBzZWN0aW9uYCBhbmQgYGFydGljbGVgXG4gKiBjb250ZXh0cyBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cblxuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gSUUgOC85LlxuICovXG5cbm1hcmsge1xuICBiYWNrZ3JvdW5kOiAjZmYwO1xuICBjb2xvcjogIzAwMDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIGluY29uc2lzdGVudCBhbmQgdmFyaWFibGUgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGFmZmVjdGluZyBgbGluZS1oZWlnaHRgIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIFJlbW92ZSBib3JkZXIgd2hlbiBpbnNpZGUgYGFgIGVsZW1lbnQgaW4gSUUgOC85LzEwLlxuICovXG5cbmltZyB7XG4gIGJvcmRlcjogMDtcbn1cblxuLyoqXG4gKiBDb3JyZWN0IG92ZXJmbG93IG5vdCBoaWRkZW4gaW4gSUUgOS8xMC8xMS5cbiAqL1xuXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogQWRkcmVzcyBtYXJnaW4gbm90IHByZXNlbnQgaW4gSUUgOC85IGFuZCBTYWZhcmkuXG4gKi9cblxuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDtcbn1cblxuLyoqXG4gKiBBZGRyZXNzIGRpZmZlcmVuY2VzIGJldHdlZW4gRmlyZWZveCBhbmQgb3RoZXIgYnJvd3NlcnMuXG4gKi9cblxuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgaGVpZ2h0OiAwO1xufVxuXG4vKipcbiAqIENvbnRhaW4gb3ZlcmZsb3cgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnByZSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIEFkZHJlc3Mgb2RkIGBlbWAtdW5pdCBmb250IHNpemUgcmVuZGVyaW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgZm9udC1zaXplOiAxZW07XG59XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEtub3duIGxpbWl0YXRpb246IGJ5IGRlZmF1bHQsIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFggYWxsb3cgdmVyeSBsaW1pdGVkXG4gKiBzdHlsaW5nIG9mIGBzZWxlY3RgLCB1bmxlc3MgYSBgYm9yZGVyYCBwcm9wZXJ0eSBpcyBzZXQuXG4gKi9cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGNvbG9yIG5vdCBiZWluZyBpbmhlcml0ZWQuXG4gKiAgICBLbm93biBpc3N1ZTogYWZmZWN0cyBjb2xvciBvZiBkaXNhYmxlZCBlbGVtZW50cy5cbiAqIDIuIENvcnJlY3QgZm9udCBwcm9wZXJ0aWVzIG5vdCBiZWluZyBpbmhlcml0ZWQuXG4gKiAzLiBBZGRyZXNzIG1hcmdpbnMgc2V0IGRpZmZlcmVudGx5IGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCxcbm9wdGdyb3VwLFxuc2VsZWN0LFxudGV4dGFyZWEge1xuICBjb2xvcjogaW5oZXJpdDsgLyogMSAqL1xuICBmb250OiBpbmhlcml0OyAvKiAyICovXG4gIG1hcmdpbjogMDsgLyogMyAqL1xufVxuXG4vKipcbiAqIEFkZHJlc3MgYG92ZXJmbG93YCBzZXQgdG8gYGhpZGRlbmAgaW4gSUUgOC85LzEwLzExLlxuICovXG5cbmJ1dHRvbiB7XG4gIG92ZXJmbG93OiB2aXNpYmxlO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGB0ZXh0LXRyYW5zZm9ybWAgaW5oZXJpdGFuY2UgZm9yIGBidXR0b25gIGFuZCBgc2VsZWN0YC5cbiAqIEFsbCBvdGhlciBmb3JtIGNvbnRyb2wgZWxlbWVudHMgZG8gbm90IGluaGVyaXQgYHRleHQtdHJhbnNmb3JtYCB2YWx1ZXMuXG4gKiBDb3JyZWN0IGBidXR0b25gIHN0eWxlIGluaGVyaXRhbmNlIGluIEZpcmVmb3gsIElFIDgvOS8xMC8xMSwgYW5kIE9wZXJhLlxuICogQ29ycmVjdCBgc2VsZWN0YCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG4vKipcbiAqIDEuIEF2b2lkIHRoZSBXZWJLaXQgYnVnIGluIEFuZHJvaWQgNC4wLiogd2hlcmUgKDIpIGRlc3Ryb3lzIG5hdGl2ZSBgYXVkaW9gXG4gKiAgICBhbmQgYHZpZGVvYCBjb250cm9scy5cbiAqIDIuIENvcnJlY3QgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSBgaW5wdXRgIHR5cGVzIGluIGlPUy5cbiAqIDMuIEltcHJvdmUgdXNhYmlsaXR5IGFuZCBjb25zaXN0ZW5jeSBvZiBjdXJzb3Igc3R5bGUgYmV0d2VlbiBpbWFnZS10eXBlXG4gKiAgICBgaW5wdXRgIGFuZCBvdGhlcnMuXG4gKi9cblxuYnV0dG9uLFxuaHRtbCBpbnB1dFt0eXBlPVwiYnV0dG9uXCJdLCAvKiAxICovXG5pbnB1dFt0eXBlPVwicmVzZXRcIl0sXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDIgKi9cbiAgY3Vyc29yOiBwb2ludGVyOyAvKiAzICovXG59XG5cbi8qKlxuICogUmUtc2V0IGRlZmF1bHQgY3Vyc29yIGZvciBkaXNhYmxlZCBlbGVtZW50cy5cbiAqL1xuXG5idXR0b25bZGlzYWJsZWRdLFxuaHRtbCBpbnB1dFtkaXNhYmxlZF0ge1xuICBjdXJzb3I6IGRlZmF1bHQ7XG59XG5cbi8qKlxuICogUmVtb3ZlIGlubmVyIHBhZGRpbmcgYW5kIGJvcmRlciBpbiBGaXJlZm94IDQrLlxuICovXG5cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcbmlucHV0OjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyOiAwO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIEFkZHJlc3MgRmlyZWZveCA0KyBzZXR0aW5nIGBsaW5lLWhlaWdodGAgb24gYGlucHV0YCB1c2luZyBgIWltcG9ydGFudGAgaW5cbiAqIHRoZSBVQSBzdHlsZXNoZWV0LlxuICovXG5cbmlucHV0IHtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDtcbn1cblxuLyoqXG4gKiBJdCdzIHJlY29tbWVuZGVkIHRoYXQgeW91IGRvbid0IGF0dGVtcHQgdG8gc3R5bGUgdGhlc2UgZWxlbWVudHMuXG4gKiBGaXJlZm94J3MgaW1wbGVtZW50YXRpb24gZG9lc24ndCByZXNwZWN0IGJveC1zaXppbmcsIHBhZGRpbmcsIG9yIHdpZHRoLlxuICpcbiAqIDEuIEFkZHJlc3MgYm94IHNpemluZyBzZXQgdG8gYGNvbnRlbnQtYm94YCBpbiBJRSA4LzkvMTAuXG4gKiAyLiBSZW1vdmUgZXhjZXNzIHBhZGRpbmcgaW4gSUUgOC85LzEwLlxuICovXG5cbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSxcbmlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIEZpeCB0aGUgY3Vyc29yIHN0eWxlIGZvciBDaHJvbWUncyBpbmNyZW1lbnQvZGVjcmVtZW50IGJ1dHRvbnMuIEZvciBjZXJ0YWluXG4gKiBgZm9udC1zaXplYCB2YWx1ZXMgb2YgdGhlIGBpbnB1dGAsIGl0IGNhdXNlcyB0aGUgY3Vyc29yIHN0eWxlIG9mIHRoZVxuICogZGVjcmVtZW50IGJ1dHRvbiB0byBjaGFuZ2UgZnJvbSBgZGVmYXVsdGAgdG8gYHRleHRgLlxuICovXG5cbmlucHV0W3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvO1xufVxuXG4vKipcbiAqIDEuIEFkZHJlc3MgYGFwcGVhcmFuY2VgIHNldCB0byBgc2VhcmNoZmllbGRgIGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuICogMi4gQWRkcmVzcyBgYm94LXNpemluZ2Agc2V0IHRvIGBib3JkZXItYm94YCBpbiBTYWZhcmkgYW5kIENocm9tZS5cbiAqL1xuXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7IC8qIDEgKi9cbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgc2VhcmNoIGNhbmNlbCBidXR0b24gaW4gU2FmYXJpIGFuZCBDaHJvbWUgb24gT1MgWC5cbiAqIFNhZmFyaSAoYnV0IG5vdCBDaHJvbWUpIGNsaXBzIHRoZSBjYW5jZWwgYnV0dG9uIHdoZW4gdGhlIHNlYXJjaCBpbnB1dCBoYXNcbiAqIHBhZGRpbmcgKGFuZCBgdGV4dGZpZWxkYCBhcHBlYXJhbmNlKS5cbiAqL1xuXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuLyoqXG4gKiBEZWZpbmUgY29uc2lzdGVudCBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcuXG4gKi9cblxuZmllbGRzZXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICBtYXJnaW46IDAgMnB4O1xuICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCBgY29sb3JgIG5vdCBiZWluZyBpbmhlcml0ZWQgaW4gSUUgOC85LzEwLzExLlxuICogMi4gUmVtb3ZlIHBhZGRpbmcgc28gcGVvcGxlIGFyZW4ndCBjYXVnaHQgb3V0IGlmIHRoZXkgemVybyBvdXQgZmllbGRzZXRzLlxuICovXG5cbmxlZ2VuZCB7XG4gIGJvcmRlcjogMDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDgvOS8xMC8xMS5cbiAqL1xuXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xufVxuXG4vKipcbiAqIERvbid0IGluaGVyaXQgdGhlIGBmb250LXdlaWdodGAgKGFwcGxpZWQgYnkgYSBydWxlIGFib3ZlKS5cbiAqIE5PVEU6IHRoZSBkZWZhdWx0IGNhbm5vdCBzYWZlbHkgYmUgY2hhbmdlZCBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBPUyBYLlxuICovXG5cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG59XG5cbi8qIFRhYmxlc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgbW9zdCBzcGFjaW5nIGJldHdlZW4gdGFibGUgY2VsbHMuXG4gKi9cblxudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDtcbn1cblxudGQsXG50aCB7XG4gIHBhZGRpbmc6IDA7XG59XG4iLCIvKiEgbm9ybWFsaXplLmNzcyB2My4wLjMgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG4vKipcbiAqIDEuIFNldCBkZWZhdWx0IGZvbnQgZmFtaWx5IHRvIHNhbnMtc2VyaWYuXG4gKiAyLiBQcmV2ZW50IGlPUyBhbmQgSUUgdGV4dCBzaXplIGFkanVzdCBhZnRlciBkZXZpY2Ugb3JpZW50YXRpb24gY2hhbmdlLFxuICogICAgd2l0aG91dCBkaXNhYmxpbmcgdXNlciB6b29tLlxuICovXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gIC8qIDEgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZW1vdmUgZGVmYXVsdCBtYXJnaW4uXG4gKi9cbmJvZHkge1xuICBtYXJnaW46IDA7IH1cblxuLyogSFRNTDUgZGlzcGxheSBkZWZpbml0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQ29ycmVjdCBgYmxvY2tgIGRpc3BsYXkgbm90IGRlZmluZWQgZm9yIGFueSBIVE1MNSBlbGVtZW50IGluIElFIDgvOS5cbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgZGV0YWlsc2Agb3IgYHN1bW1hcnlgIGluIElFIDEwLzExXG4gKiBhbmQgRmlyZWZveC5cbiAqIENvcnJlY3QgYGJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGZvciBgbWFpbmAgaW4gSUUgMTEuXG4gKi9cbmFydGljbGUsXG5hc2lkZSxcbmRldGFpbHMsXG5maWdjYXB0aW9uLFxuZmlndXJlLFxuZm9vdGVyLFxuaGVhZGVyLFxuaGdyb3VwLFxubWFpbixcbm1lbnUsXG5uYXYsXG5zZWN0aW9uLFxuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCBgaW5saW5lLWJsb2NrYCBkaXNwbGF5IG5vdCBkZWZpbmVkIGluIElFIDgvOS5cbiAqIDIuIE5vcm1hbGl6ZSB2ZXJ0aWNhbCBhbGlnbm1lbnQgb2YgYHByb2dyZXNzYCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xuYXVkaW8sXG5jYW52YXMsXG5wcm9ncmVzcyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICAvKiAxICovXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUHJldmVudCBtb2Rlcm4gYnJvd3NlcnMgZnJvbSBkaXNwbGF5aW5nIGBhdWRpb2Agd2l0aG91dCBjb250cm9scy5cbiAqIFJlbW92ZSBleGNlc3MgaGVpZ2h0IGluIGlPUyA1IGRldmljZXMuXG4gKi9cbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIGhlaWdodDogMDsgfVxuXG4vKipcbiAqIEFkZHJlc3MgYFtoaWRkZW5dYCBzdHlsaW5nIG5vdCBwcmVzZW50IGluIElFIDgvOS8xMC5cbiAqIEhpZGUgdGhlIGB0ZW1wbGF0ZWAgZWxlbWVudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIEZpcmVmb3ggPCAyMi5cbiAqL1xuW2hpZGRlbl0sXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLyogTGlua3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIGNvbG9yIGZyb20gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICovXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cblxuLyoqXG4gKiBJbXByb3ZlIHJlYWRhYmlsaXR5IG9mIGZvY3VzZWQgZWxlbWVudHMgd2hlbiB0aGV5IGFyZSBhbHNvIGluIGFuXG4gKiBhY3RpdmUvaG92ZXIgc3RhdGUuXG4gKi9cbmE6YWN0aXZlLFxuYTpob3ZlciB7XG4gIG91dGxpbmU6IDA7IH1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkvMTAvMTEsIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiAxcHggZG90dGVkOyB9XG5cbi8qKlxuICogQWRkcmVzcyBzdHlsZSBzZXQgdG8gYGJvbGRlcmAgaW4gRmlyZWZveCA0KywgU2FmYXJpLCBhbmQgQ2hyb21lLlxuICovXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxuLyoqXG4gKiBBZGRyZXNzIHN0eWxpbmcgbm90IHByZXNlbnQgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKi9cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYzsgfVxuXG4vKipcbiAqIEFkZHJlc3MgdmFyaWFibGUgYGgxYCBmb250LXNpemUgYW5kIG1hcmdpbiB3aXRoaW4gYHNlY3Rpb25gIGFuZCBgYXJ0aWNsZWBcbiAqIGNvbnRleHRzIGluIEZpcmVmb3ggNCssIFNhZmFyaSwgYW5kIENocm9tZS5cbiAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDsgfVxuXG4vKipcbiAqIEFkZHJlc3Mgc3R5bGluZyBub3QgcHJlc2VudCBpbiBJRSA4LzkuXG4gKi9cbm1hcmsge1xuICBiYWNrZ3JvdW5kOiAjZmYwO1xuICBjb2xvcjogIzAwMDsgfVxuXG4vKipcbiAqIEFkZHJlc3MgaW5jb25zaXN0ZW50IGFuZCB2YXJpYWJsZSBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlOyB9XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgYWZmZWN0aW5nIGBsaW5lLWhlaWdodGAgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zdWIsXG5zdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtOyB9XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTsgfVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgYm9yZGVyIHdoZW4gaW5zaWRlIGBhYCBlbGVtZW50IGluIElFIDgvOS8xMC5cbiAqL1xuaW1nIHtcbiAgYm9yZGVyOiAwOyB9XG5cbi8qKlxuICogQ29ycmVjdCBvdmVyZmxvdyBub3QgaGlkZGVuIGluIElFIDkvMTAvMTEuXG4gKi9cbnN2Zzpub3QoOnJvb3QpIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBBZGRyZXNzIG1hcmdpbiBub3QgcHJlc2VudCBpbiBJRSA4LzkgYW5kIFNhZmFyaS5cbiAqL1xuZmlndXJlIHtcbiAgbWFyZ2luOiAxZW0gNDBweDsgfVxuXG4vKipcbiAqIEFkZHJlc3MgZGlmZmVyZW5jZXMgYmV0d2VlbiBGaXJlZm94IGFuZCBvdGhlciBicm93c2Vycy5cbiAqL1xuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgaGVpZ2h0OiAwOyB9XG5cbi8qKlxuICogQ29udGFpbiBvdmVyZmxvdyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnByZSB7XG4gIG92ZXJmbG93OiBhdXRvOyB9XG5cbi8qKlxuICogQWRkcmVzcyBvZGQgYGVtYC11bml0IGZvbnQgc2l6ZSByZW5kZXJpbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5jb2RlLFxua2JkLFxucHJlLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgZm9udC1zaXplOiAxZW07IH1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEtub3duIGxpbWl0YXRpb246IGJ5IGRlZmF1bHQsIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFggYWxsb3cgdmVyeSBsaW1pdGVkXG4gKiBzdHlsaW5nIG9mIGBzZWxlY3RgLCB1bmxlc3MgYSBgYm9yZGVyYCBwcm9wZXJ0eSBpcyBzZXQuXG4gKi9cbi8qKlxuICogMS4gQ29ycmVjdCBjb2xvciBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogICAgS25vd24gaXNzdWU6IGFmZmVjdHMgY29sb3Igb2YgZGlzYWJsZWQgZWxlbWVudHMuXG4gKiAyLiBDb3JyZWN0IGZvbnQgcHJvcGVydGllcyBub3QgYmVpbmcgaW5oZXJpdGVkLlxuICogMy4gQWRkcmVzcyBtYXJnaW5zIHNldCBkaWZmZXJlbnRseSBpbiBGaXJlZm94IDQrLCBTYWZhcmksIGFuZCBDaHJvbWUuXG4gKi9cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbiAgbWFyZ2luOiAwO1xuICAvKiAzICovIH1cblxuLyoqXG4gKiBBZGRyZXNzIGBvdmVyZmxvd2Agc2V0IHRvIGBoaWRkZW5gIGluIElFIDgvOS8xMC8xMS5cbiAqL1xuYnV0dG9uIHtcbiAgb3ZlcmZsb3c6IHZpc2libGU7IH1cblxuLyoqXG4gKiBBZGRyZXNzIGluY29uc2lzdGVudCBgdGV4dC10cmFuc2Zvcm1gIGluaGVyaXRhbmNlIGZvciBgYnV0dG9uYCBhbmQgYHNlbGVjdGAuXG4gKiBBbGwgb3RoZXIgZm9ybSBjb250cm9sIGVsZW1lbnRzIGRvIG5vdCBpbmhlcml0IGB0ZXh0LXRyYW5zZm9ybWAgdmFsdWVzLlxuICogQ29ycmVjdCBgYnV0dG9uYCBzdHlsZSBpbmhlcml0YW5jZSBpbiBGaXJlZm94LCBJRSA4LzkvMTAvMTEsIGFuZCBPcGVyYS5cbiAqIENvcnJlY3QgYHNlbGVjdGAgc3R5bGUgaW5oZXJpdGFuY2UgaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uLFxuc2VsZWN0IHtcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuLyoqXG4gKiAxLiBBdm9pZCB0aGUgV2ViS2l0IGJ1ZyBpbiBBbmRyb2lkIDQuMC4qIHdoZXJlICgyKSBkZXN0cm95cyBuYXRpdmUgYGF1ZGlvYFxuICogICAgYW5kIGB2aWRlb2AgY29udHJvbHMuXG4gKiAyLiBDb3JyZWN0IGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgYGlucHV0YCB0eXBlcyBpbiBpT1MuXG4gKiAzLiBJbXByb3ZlIHVzYWJpbGl0eSBhbmQgY29uc2lzdGVuY3kgb2YgY3Vyc29yIHN0eWxlIGJldHdlZW4gaW1hZ2UtdHlwZVxuICogICAgYGlucHV0YCBhbmQgb3RoZXJzLlxuICovXG5idXR0b24sXG5odG1sIGlucHV0W3R5cGU9XCJidXR0b25cIl0sXG5pbnB1dFt0eXBlPVwicmVzZXRcIl0sXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDIgKi9cbiAgY3Vyc29yOiBwb2ludGVyO1xuICAvKiAzICovIH1cblxuLyoqXG4gKiBSZS1zZXQgZGVmYXVsdCBjdXJzb3IgZm9yIGRpc2FibGVkIGVsZW1lbnRzLlxuICovXG5idXR0b25bZGlzYWJsZWRdLFxuaHRtbCBpbnB1dFtkaXNhYmxlZF0ge1xuICBjdXJzb3I6IGRlZmF1bHQ7IH1cblxuLyoqXG4gKiBSZW1vdmUgaW5uZXIgcGFkZGluZyBhbmQgYm9yZGVyIGluIEZpcmVmb3ggNCsuXG4gKi9cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcbmlucHV0OjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyOiAwO1xuICBwYWRkaW5nOiAwOyB9XG5cbi8qKlxuICogQWRkcmVzcyBGaXJlZm94IDQrIHNldHRpbmcgYGxpbmUtaGVpZ2h0YCBvbiBgaW5wdXRgIHVzaW5nIGAhaW1wb3J0YW50YCBpblxuICogdGhlIFVBIHN0eWxlc2hlZXQuXG4gKi9cbmlucHV0IHtcbiAgbGluZS1oZWlnaHQ6IG5vcm1hbDsgfVxuXG4vKipcbiAqIEl0J3MgcmVjb21tZW5kZWQgdGhhdCB5b3UgZG9uJ3QgYXR0ZW1wdCB0byBzdHlsZSB0aGVzZSBlbGVtZW50cy5cbiAqIEZpcmVmb3gncyBpbXBsZW1lbnRhdGlvbiBkb2Vzbid0IHJlc3BlY3QgYm94LXNpemluZywgcGFkZGluZywgb3Igd2lkdGguXG4gKlxuICogMS4gQWRkcmVzcyBib3ggc2l6aW5nIHNldCB0byBgY29udGVudC1ib3hgIGluIElFIDgvOS8xMC5cbiAqIDIuIFJlbW92ZSBleGNlc3MgcGFkZGluZyBpbiBJRSA4LzkvMTAuXG4gKi9cbmlucHV0W3R5cGU9XCJjaGVja2JveFwiXSxcbmlucHV0W3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogRml4IHRoZSBjdXJzb3Igc3R5bGUgZm9yIENocm9tZSdzIGluY3JlbWVudC9kZWNyZW1lbnQgYnV0dG9ucy4gRm9yIGNlcnRhaW5cbiAqIGBmb250LXNpemVgIHZhbHVlcyBvZiB0aGUgYGlucHV0YCwgaXQgY2F1c2VzIHRoZSBjdXJzb3Igc3R5bGUgb2YgdGhlXG4gKiBkZWNyZW1lbnQgYnV0dG9uIHRvIGNoYW5nZSBmcm9tIGBkZWZhdWx0YCB0byBgdGV4dGAuXG4gKi9cbmlucHV0W3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5pbnB1dFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQWRkcmVzcyBgYXBwZWFyYW5jZWAgc2V0IHRvIGBzZWFyY2hmaWVsZGAgaW4gU2FmYXJpIGFuZCBDaHJvbWUuXG4gKiAyLiBBZGRyZXNzIGBib3gtc2l6aW5nYCBzZXQgdG8gYGJvcmRlci1ib3hgIGluIFNhZmFyaSBhbmQgQ2hyb21lLlxuICovXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG4gIC8qIDEgKi9cbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSBpbm5lciBwYWRkaW5nIGFuZCBzZWFyY2ggY2FuY2VsIGJ1dHRvbiBpbiBTYWZhcmkgYW5kIENocm9tZSBvbiBPUyBYLlxuICogU2FmYXJpIChidXQgbm90IENocm9tZSkgY2xpcHMgdGhlIGNhbmNlbCBidXR0b24gd2hlbiB0aGUgc2VhcmNoIGlucHV0IGhhc1xuICogcGFkZGluZyAoYW5kIGB0ZXh0ZmllbGRgIGFwcGVhcmFuY2UpLlxuICovXG5pbnB1dFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuaW5wdXRbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgfVxuXG4vKipcbiAqIERlZmluZSBjb25zaXN0ZW50IGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZy5cbiAqL1xuZmllbGRzZXQge1xuICBib3JkZXI6IDFweCBzb2xpZCAjYzBjMGMwO1xuICBtYXJnaW46IDAgMnB4O1xuICBwYWRkaW5nOiAwLjM1ZW0gMC42MjVlbSAwLjc1ZW07IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IGBjb2xvcmAgbm90IGJlaW5nIGluaGVyaXRlZCBpbiBJRSA4LzkvMTAvMTEuXG4gKiAyLiBSZW1vdmUgcGFkZGluZyBzbyBwZW9wbGUgYXJlbid0IGNhdWdodCBvdXQgaWYgdGhleSB6ZXJvIG91dCBmaWVsZHNldHMuXG4gKi9cbmxlZ2VuZCB7XG4gIGJvcmRlcjogMDtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZW1vdmUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgOC85LzEwLzExLlxuICovXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvOyB9XG5cbi8qKlxuICogRG9uJ3QgaW5oZXJpdCB0aGUgYGZvbnQtd2VpZ2h0YCAoYXBwbGllZCBieSBhIHJ1bGUgYWJvdmUpLlxuICogTk9URTogdGhlIGRlZmF1bHQgY2Fubm90IHNhZmVseSBiZSBjaGFuZ2VkIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIE9TIFguXG4gKi9cbm9wdGdyb3VwIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7IH1cblxuLyogVGFibGVzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgbW9zdCBzcGFjaW5nIGJldHdlZW4gdGFibGUgY2VsbHMuXG4gKi9cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7IH1cblxudGQsXG50aCB7XG4gIHBhZGRpbmc6IDA7IH1cblxuLnRvcG5hdiwgLmhvbWUsIC5ob21lIC5sZWZ0LWxvb3AsIC5ob21lIC5yaWdodC1sb29wLCAuYWJvdXQge1xuICAqem9vbTogMTsgfVxuICAudG9wbmF2OmJlZm9yZSwgLmhvbWU6YmVmb3JlLCAuaG9tZSAubGVmdC1sb29wOmJlZm9yZSwgLmhvbWUgLnJpZ2h0LWxvb3A6YmVmb3JlLCAuYWJvdXQ6YmVmb3JlLCAudG9wbmF2OmFmdGVyLCAuaG9tZTphZnRlciwgLmhvbWUgLmxlZnQtbG9vcDphZnRlciwgLmhvbWUgLnJpZ2h0LWxvb3A6YWZ0ZXIsIC5hYm91dDphZnRlciB7XG4gICAgY29udGVudDogXCIgXCI7XG4gICAgZGlzcGxheTogdGFibGU7IH1cbiAgLnRvcG5hdjphZnRlciwgLmhvbWU6YWZ0ZXIsIC5ob21lIC5sZWZ0LWxvb3A6YWZ0ZXIsIC5ob21lIC5yaWdodC1sb29wOmFmdGVyLCAuYWJvdXQ6YWZ0ZXIge1xuICAgIGNsZWFyOiBib3RoOyB9XG5cbmh0bWwge1xuICBmb250LWZhbWlseTogJ0hlbHZldGljYSBOZXVlJywgSGVsdmV0aWNhLCBBcmlhbCwgUm9ib3RvLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDE2cHg7XG4gIGxpbmUtaGVpZ2h0OiAxLjU7XG4gIGNvbG9yOiAjMTIxMjEyOyB9XG5cbi5tb2RhbC1vcGVuIHtcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuXG5oMSB7XG4gIGZvbnQtc2l6ZTogNTZweDtcbiAgbWFyZ2luOiAwOyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICBoMSB7XG4gICAgICBmb250LXNpemU6IDMycHg7IH0gfVxuXG5oMiB7XG4gIGZvbnQtc2l6ZTogMjhweDtcbiAgbWFyZ2luOiAwO1xuICBmb250LXdlaWdodDogNTAwOyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICBoMiB7XG4gICAgICBmb250LXNpemU6IDIwcHg7IH0gfVxuXG5oMyB7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgbWFyZ2luOiAwO1xuICBmb250LXdlaWdodDogNTAwOyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICBoMyB7XG4gICAgICBmb250LXNpemU6IDE4cHg7IH0gfVxuXG5oNCB7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgbWFyZ2luOiAwO1xuICBmb250LXdlaWdodDogNDAwOyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICBoNCB7XG4gICAgICBmb250LXNpemU6IDE2cHg7IH0gfVxuXG5oNSB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbWFyZ2luOiAwO1xuICBmb250LXdlaWdodDogNDAwOyB9XG5cbmg2IHtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBtYXJnaW46IDA7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7IH1cblxuYSB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cblxuYS50ZXh0bGluayB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG4gIGEudGV4dGxpbms6YmVmb3JlIHtcbiAgICBjb250ZW50OiBcIlwiO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMXB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMxMjEyMTI7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIGxlZnQ6IDA7XG4gICAgYm90dG9tOiAtMnB4O1xuICAgIG9wYWNpdHk6IDA7XG4gICAgZmlsdGVyOiBhbHBoYShvcGFjaXR5PTApO1xuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZS1pbi1vdXQ7XG4gICAgLW1vei10cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlLWluLW91dDtcbiAgICAtby10cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlLWluLW91dDtcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlLWluLW91dDsgfVxuICBhLnRleHRsaW5rOmhvdmVyOmJlZm9yZSB7XG4gICAgb3BhY2l0eTogMTtcbiAgICBmaWx0ZXI6IGFscGhhKG9wYWNpdHk9MTAwKTtcbiAgICBib3R0b206IDJweDsgfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgYS50ZXh0bGluazpiZWZvcmUge1xuICAgICAgb3BhY2l0eTogMTtcbiAgICAgIGZpbHRlcjogYWxwaGEob3BhY2l0eT0xMDApO1xuICAgICAgYm90dG9tOiAycHg7IH0gfVxuXG4uYnV0dG9uIHtcbiAgYm9yZGVyOiAxcHggc29saWQgIzEyMTIxMjtcbiAgbGluZS1oZWlnaHQ6IDQ4cHg7XG4gIGZvbnQtd2VpZ2h0OiAzMDA7XG4gIHBhZGRpbmc6IDAgNTBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIG91dGxpbmU6IG5vbmU7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlLWluLW91dDtcbiAgLW1vei10cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlLWluLW91dDtcbiAgLW8tdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZS1pbi1vdXQ7XG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW4tb3V0OyB9XG4gIC5idXR0b246aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMxMjEyMTI7XG4gICAgY29sb3I6ICNGRkZGRkY7IH1cblxuLmJ1dHRvbi5hcHBzdG9yZSB7XG4gIHBhZGRpbmc6IDAgNDBweCAwIDcwcHg7IH1cbiAgLmJ1dHRvbi5hcHBzdG9yZSBzcGFuLmljb24ge1xuICAgIGZvbnQtc2l6ZTogMzJweDtcbiAgICBtYXJnaW46IDAgOHB4O1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMzBweDsgfVxuXG5ALXdlYmtpdC1rZXlmcmFtZXMgc2hpbmUge1xuICAwJSB7XG4gICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC44KTtcbiAgICB0ZXh0LXNoYWRvdzogMCAwcHggMTVweCByZ2JhKDAsIDAsIDAsIDAuOSk7IH1cbiAgNTAlIHtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgdGV4dC1zaGFkb3c6IDAgMXB4IDE1cHggcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjkpOyB9XG4gIDEwMCUge1xuICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7XG4gICAgdGV4dC1zaGFkb3c6IDAgMHB4IDE1cHggcmdiYSgwLCAwLCAwLCAwLjkpOyB9IH1cblxuQC1tb3ota2V5ZnJhbWVzIHNoaW5lIHtcbiAgMCUge1xuICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7XG4gICAgdGV4dC1zaGFkb3c6IDAgMHB4IDE1cHggcmdiYSgwLCAwLCAwLCAwLjkpOyB9XG4gIDUwJSB7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIHRleHQtc2hhZG93OiAwIDFweCAxNXB4IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC45KTsgfVxuICAxMDAlIHtcbiAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpO1xuICAgIHRleHQtc2hhZG93OiAwIDBweCAxNXB4IHJnYmEoMCwgMCwgMCwgMC45KTsgfSB9XG5cbkAtbXMta2V5ZnJhbWVzIHNoaW5lIHtcbiAgMCUge1xuICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7XG4gICAgdGV4dC1zaGFkb3c6IDAgMHB4IDE1cHggcmdiYSgwLCAwLCAwLCAwLjkpOyB9XG4gIDUwJSB7XG4gICAgY29sb3I6IHdoaXRlO1xuICAgIHRleHQtc2hhZG93OiAwIDFweCAxNXB4IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC45KTsgfVxuICAxMDAlIHtcbiAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpO1xuICAgIHRleHQtc2hhZG93OiAwIDBweCAxNXB4IHJnYmEoMCwgMCwgMCwgMC45KTsgfSB9XG5cbkAtby1rZXlmcmFtZXMgc2hpbmUge1xuICAwJSB7XG4gICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC44KTtcbiAgICB0ZXh0LXNoYWRvdzogMCAwcHggMTVweCByZ2JhKDAsIDAsIDAsIDAuOSk7IH1cbiAgNTAlIHtcbiAgICBjb2xvcjogd2hpdGU7XG4gICAgdGV4dC1zaGFkb3c6IDAgMXB4IDE1cHggcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjkpOyB9XG4gIDEwMCUge1xuICAgIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOCk7XG4gICAgdGV4dC1zaGFkb3c6IDAgMHB4IDE1cHggcmdiYSgwLCAwLCAwLCAwLjkpOyB9IH1cblxuQGtleWZyYW1lcyBzaGluZSB7XG4gIDAlIHtcbiAgICBjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjgpO1xuICAgIHRleHQtc2hhZG93OiAwIDBweCAxNXB4IHJnYmEoMCwgMCwgMCwgMC45KTsgfVxuICA1MCUge1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICB0ZXh0LXNoYWRvdzogMCAxcHggMTVweCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuOSk7IH1cbiAgMTAwJSB7XG4gICAgY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC44KTtcbiAgICB0ZXh0LXNoYWRvdzogMCAwcHggMTVweCByZ2JhKDAsIDAsIDAsIDAuOSk7IH0gfVxuXG4udG9wbmF2IHtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogNzBweDtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDBweDtcbiAgei1pbmRleDogNTAwOyB9XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAudG9wbmF2IHtcbiAgICAgIGhlaWdodDogNTBweDsgfSB9XG4gIC50b3BuYXYgLmxlZnRkaXYge1xuICAgIHdpZHRoOiA1MCU7XG4gICAgaGVpZ2h0OiBpbmhlcml0O1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gICAgLnRvcG5hdiAubGVmdGRpdiAubG9nbyB7XG4gICAgICB3aWR0aDogMzZweDtcbiAgICAgIGhlaWdodDogMzZweDtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgIG1hcmdpbjogMCAxNXB4IDAgNDBweDtcbiAgICAgIGZpbGw6ICMxMjEyMTI7IH1cbiAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgLnRvcG5hdiAubGVmdGRpdiAubG9nbyB7XG4gICAgICAgICAgd2lkdGg6IDI0cHg7XG4gICAgICAgICAgaGVpZ2h0OiAyNHB4O1xuICAgICAgICAgIG1hcmdpbjogMCAxMHB4IDAgMjBweDsgfSB9XG4gICAgLnRvcG5hdiAubGVmdGRpdiBoMyB7XG4gICAgICBsaW5lLWhlaWdodDogNzBweDtcbiAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuICAgICAgLnRvcG5hdiAubGVmdGRpdiBoMyBzcGFuIHtcbiAgICAgICAgZm9udC13ZWlnaHQ6IDMwMDsgfVxuICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgICAudG9wbmF2IC5sZWZ0ZGl2IGgzIHtcbiAgICAgICAgICBsaW5lLWhlaWdodDogNTBweDsgfSB9XG4gIC50b3BuYXYgLnJpZ2h0ZGl2IHtcbiAgICB3aWR0aDogNTAlO1xuICAgIGhlaWdodDogaW5oZXJpdDtcbiAgICBmbG9hdDogbGVmdDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTIxMjEyO1xuICAgIGNvbG9yOiAjRkZGRkZGOyB9XG4gICAgLnRvcG5hdiAucmlnaHRkaXYgbmF2IHtcbiAgICAgIGZsb2F0OiByaWdodDtcbiAgICAgIG1hcmdpbi1yaWdodDogNDBweDsgfVxuICAgICAgLnRvcG5hdiAucmlnaHRkaXYgbmF2IGEge1xuICAgICAgICBmb250LXdlaWdodDogMzAwO1xuICAgICAgICBsaW5lLWhlaWdodDogNzBweDtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDQwcHg7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBvcGFjaXR5OiAwLjg7XG4gICAgICAgIGZpbHRlcjogYWxwaGEob3BhY2l0eT04MCk7XG4gICAgICAgIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZS1pbi1vdXQ7XG4gICAgICAgIC1tb3otdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZS1pbi1vdXQ7XG4gICAgICAgIC1vLXRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW4tb3V0O1xuICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlLWluLW91dDsgfVxuICAgICAgICAudG9wbmF2IC5yaWdodGRpdiBuYXYgYTpiZWZvcmUge1xuICAgICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgaGVpZ2h0OiAxcHg7XG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjtcbiAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICBib3R0b206IDE0cHg7XG4gICAgICAgICAgb3BhY2l0eTogMDtcbiAgICAgICAgICBmaWx0ZXI6IGFscGhhKG9wYWNpdHk9MCk7XG4gICAgICAgICAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlLWluLW91dDtcbiAgICAgICAgICAtbW96LXRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW4tb3V0O1xuICAgICAgICAgIC1vLXRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW4tb3V0O1xuICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW4tb3V0OyB9XG4gICAgICAgIC50b3BuYXYgLnJpZ2h0ZGl2IG5hdiBhOmhvdmVyIHtcbiAgICAgICAgICBvcGFjaXR5OiAxO1xuICAgICAgICAgIGZpbHRlcjogYWxwaGEob3BhY2l0eT0xMDApOyB9XG4gICAgICAgICAgLnRvcG5hdiAucmlnaHRkaXYgbmF2IGE6aG92ZXI6YmVmb3JlIHtcbiAgICAgICAgICAgIG9wYWNpdHk6IDE7XG4gICAgICAgICAgICBmaWx0ZXI6IGFscGhhKG9wYWNpdHk9MTAwKTtcbiAgICAgICAgICAgIGJvdHRvbTogMjBweDsgfVxuICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgICAudG9wbmF2IC5yaWdodGRpdiBuYXYge1xuICAgICAgICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuICAgIC50b3BuYXYgLnJpZ2h0ZGl2IGEuaWNvbiB7XG4gICAgICBmb250LXNpemU6IDMycHg7XG4gICAgICBsaW5lLWhlaWdodDogNTBweDtcbiAgICAgIGZsb2F0OiByaWdodDtcbiAgICAgIHBhZGRpbmc6IDAgMjBweDtcbiAgICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgLnRvcG5hdiAucmlnaHRkaXYgYS5pY29uIHtcbiAgICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH0gfVxuXG4uaG9tZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMHZoO1xuICBtaW4taGVpZ2h0OiA2MDBweDtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDBweDtcbiAgei1pbmRleDogMTAwOyB9XG4gIC5ob21lIGgxIHtcbiAgICBtYXJnaW4tdG9wOiAyMHZoO1xuICAgIGZvbnQtd2VpZ2h0OiAzMDA7XG4gICAgbGluZS1oZWlnaHQ6IDEuMjsgfVxuICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgIC5ob21lIGgxIHtcbiAgICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDIwJTtcbiAgICAgICAgbGluZS1oZWlnaHQ6IDEuNTsgfSB9XG4gIC5ob21lIHAge1xuICAgIG1hcmdpbi10b3A6IDIwdmg7XG4gICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICBwYWRkaW5nOiAwIDMwcHg7IH1cbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAuaG9tZSBwIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG4gIC5ob21lIGg1IHtcbiAgICBtYXJnaW4tdG9wOiAxMHZoO1xuICAgIGZvbnQtd2VpZ2h0OiAzMDA7IH1cbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAuaG9tZSBoNSB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7IH0gfVxuICAuaG9tZSAubGVmdGRpdiB7XG4gICAgd2lkdGg6IDUwJTtcbiAgICBoZWlnaHQ6IGluaGVyaXQ7XG4gICAgbWluLWhlaWdodDogNjAwcHg7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0ZGRkZGRjtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuICAgIC5ob21lIC5sZWZ0ZGl2IGltZyB7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICBtaW4taGVpZ2h0OiA2MDBweDtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHotaW5kZXg6IDA7XG4gICAgICBvcGFjaXR5OiAwLjg7XG4gICAgICBmaWx0ZXI6IGFscGhhKG9wYWNpdHk9ODApOyB9XG4gICAgLmhvbWUgLmxlZnRkaXYgaDEge1xuICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgICBwYWRkaW5nOiAwIDMwcHggMCAxOHB4O1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgei1pbmRleDogMTAwOyB9XG4gICAgLmhvbWUgLmxlZnRkaXYgcCB7XG4gICAgICB0ZXh0LWFsaWduOiByaWdodDsgfVxuICAgIC5ob21lIC5sZWZ0ZGl2IGg1IHtcbiAgICAgIHRleHQtYWxpZ246IHJpZ2h0OyB9XG4gIC5ob21lIC5yaWdodGRpdiB7XG4gICAgd2lkdGg6IDUwJTtcbiAgICBoZWlnaHQ6IGluaGVyaXQ7XG4gICAgbWluLWhlaWdodDogNjAwcHg7XG4gICAgZmxvYXQ6IGxlZnQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzEyMTIxMjtcbiAgICBjb2xvcjogI0ZGRkZGRjtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxuICAgIC5ob21lIC5yaWdodGRpdiBpbWcge1xuICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgbWluLWhlaWdodDogNjAwcHg7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICByaWdodDogMDtcbiAgICAgIHotaW5kZXg6IDA7XG4gICAgICBvcGFjaXR5OiAwLjg7XG4gICAgICBmaWx0ZXI6IGFscGhhKG9wYWNpdHk9ODApOyB9XG4gICAgLmhvbWUgLnJpZ2h0ZGl2IGgxIHtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDMwcHg7IH1cbiAgICAuaG9tZSAucmlnaHRkaXYgcCB7XG4gICAgICB0ZXh0LWFsaWduOiBsZWZ0OyB9XG4gICAgLmhvbWUgLnJpZ2h0ZGl2IGg1IHtcbiAgICAgIHRleHQtYWxpZ246IGxlZnQ7IH1cbiAgLmhvbWUgLmxlZnQtbG9vcCB7XG4gICAgbWFyZ2luLXJpZ2h0OiAtNTVweDtcbiAgICBtYXJnaW4tdG9wOiA2MHB4OyB9XG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgLmhvbWUgLmxlZnQtbG9vcCB7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICByaWdodDogLTU1cHg7XG4gICAgICAgIHRvcDogNjAlOyB9IH1cbiAgICAuaG9tZSAubGVmdC1sb29wIHN2ZyB7XG4gICAgICBmbG9hdDogcmlnaHQ7IH1cbiAgICAuaG9tZSAubGVmdC1sb29wIHBhdGgge1xuICAgICAgZmlsbDogbm9uZTtcbiAgICAgIHN0cm9rZTogIzEyMTIxMjtcbiAgICAgIHN0cm9rZS13aWR0aDogOHB4OyB9XG4gICAgLmhvbWUgLmxlZnQtbG9vcCBjaXJjbGUge1xuICAgICAgZmlsbDogI0ZGRkZGRjsgfVxuICAuaG9tZSAucmlnaHQtbG9vcCB7XG4gICAgbWFyZ2luLWxlZnQ6IC01NXB4O1xuICAgIG1hcmdpbi10b3A6IDYwcHg7IH1cbiAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAuaG9tZSAucmlnaHQtbG9vcCB7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBsZWZ0OiAtNTVweDtcbiAgICAgICAgdG9wOiA2MCU7IH0gfVxuICAgIC5ob21lIC5yaWdodC1sb29wIHN2ZyB7XG4gICAgICBmbG9hdDogbGVmdDsgfVxuICAgIC5ob21lIC5yaWdodC1sb29wIHBhdGgge1xuICAgICAgZmlsbDogbm9uZTtcbiAgICAgIHN0cm9rZTogI0ZGRkZGRjtcbiAgICAgIHN0cm9rZS13aWR0aDogOHB4OyB9XG4gICAgLmhvbWUgLnJpZ2h0LWxvb3AgY2lyY2xlIHtcbiAgICAgIHN0cm9rZS13aWR0aDogMXB4O1xuICAgICAgc3Ryb2tlOiAjMTIxMjEyO1xuICAgICAgZmlsbDogIzEyMTIxMjsgfVxuXG4ucHJvamVjdHMge1xuICBtYXJnaW4tdG9wOiAxMDB2aDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAyMDA7IH1cbiAgLnByb2plY3RzIHVsLnByb2plY3RzLWxpc3Qge1xuICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMDsgfVxuICAgIC5wcm9qZWN0cyB1bC5wcm9qZWN0cy1saXN0IGxpIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgaGVpZ2h0OiAzMDBweDtcbiAgICAgIGNvbG9yOiAjRkZGRkZGO1xuICAgICAgY3Vyc29yOiBwb2ludGVyOyB9XG4gICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAgIC5wcm9qZWN0cyB1bC5wcm9qZWN0cy1saXN0IGxpIHtcbiAgICAgICAgICBoZWlnaHQ6IDIwMHB4OyB9IH1cbiAgICAgIC5wcm9qZWN0cyB1bC5wcm9qZWN0cy1saXN0IGxpIGg0Lm9yZyB7XG4gICAgICAgIHBhZGRpbmc6IDI1cHggNDBweDtcbiAgICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiA0MDA7IH1cbiAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgICAgIC5wcm9qZWN0cyB1bC5wcm9qZWN0cy1saXN0IGxpIGg0Lm9yZyB7XG4gICAgICAgICAgICBwYWRkaW5nOiAyMHB4IDIwcHg7IH0gfVxuICAgICAgLnByb2plY3RzIHVsLnByb2plY3RzLWxpc3QgbGkgaDEge1xuICAgICAgICBwYWRkaW5nLXRvcDogMHB4O1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgICAgIC5wcm9qZWN0cyB1bC5wcm9qZWN0cy1saXN0IGxpIGg0LnJvbGUge1xuICAgICAgICBwYWRkaW5nLXRvcDogMjBweDtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBmb250LXdlaWdodDogMzAwOyB9XG4gICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgICAgICAucHJvamVjdHMgdWwucHJvamVjdHMtbGlzdCBsaSBoNC5yb2xlIHtcbiAgICAgICAgICAgIHBhZGRpbmctdG9wOiAxMHB4OyB9IH1cbiAgICAgIC5wcm9qZWN0cyB1bC5wcm9qZWN0cy1saXN0IGxpOmhvdmVyIGgxIHtcbiAgICAgICAgLXdlYmtpdC1hbmltYXRpb246IHNoaW5lIGVhc2UgM3MgaW5maW5pdGU7XG4gICAgICAgIC1tb3otYW5pbWF0aW9uOiBzaGluZSBlYXNlIDNzIGluZmluaXRlO1xuICAgICAgICAtbXMtYW5pbWF0aW9uOiBzaGluZSBlYXNlIDNzIGluZmluaXRlO1xuICAgICAgICAtby1hbmltYXRpb246IHNoaW5lIGVhc2UgM3MgaW5maW5pdGU7XG4gICAgICAgIGFuaW1hdGlvbjogc2hpbmUgZWFzZSAzcyBpbmZpbml0ZTsgfVxuICAgIC5wcm9qZWN0cyB1bC5wcm9qZWN0cy1saXN0IGxpOm50aC1jaGlsZCgxKSB7XG4gICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQocmdiYSgwLCAwLCAwLCAwLjUpLCByZ2JhKDAsIDAsIDAsIDAuNSkpLCB1cmwoXCIuLi9pbWFnZXMvc2lxNGwuanBnXCIpIGNlbnRlciAwJSBuby1yZXBlYXQ7XG4gICAgICBiYWNrZ3JvdW5kLXNpemU6IDEwMCU7IH1cbiAgICAucHJvamVjdHMgdWwucHJvamVjdHMtbGlzdCBsaTpudGgtY2hpbGQoMikge1xuICAgICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHJnYmEoMCwgMCwgMCwgMC41KSwgcmdiYSgwLCAwLCAwLCAwLjUpKSwgdXJsKFwiLi4vaW1hZ2VzL21lLmpwZ1wiKSBjZW50ZXIgMTAlIG5vLXJlcGVhdDtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogMTAwJTsgfVxuICAgIC5wcm9qZWN0cyB1bC5wcm9qZWN0cy1saXN0IGxpOm50aC1jaGlsZCgzKSB7XG4gICAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQocmdiYSgwLCAwLCAwLCAwLjUpLCByZ2JhKDAsIDAsIDAsIDAuNSkpLCB1cmwoXCIuLi9pbWFnZXMvc20uanBnXCIpIGNlbnRlciAxMCUgbm8tcmVwZWF0O1xuICAgICAgYmFja2dyb3VuZC1zaXplOiAxMDAlOyB9XG5cbi5wcm9qZWN0cy1tb2RhbCB7XG4gIGhlaWdodDogMTAwdmg7XG4gIHdpZHRoOiAxMDAlO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMHB4O1xuICBsZWZ0OiAwcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIHotaW5kZXg6IDkwMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzEyMTIxMjtcbiAgZGlzcGxheTogbm9uZTtcbiAgb3BhY2l0eTogMDtcbiAgZmlsdGVyOiBhbHBoYShvcGFjaXR5PTApO1xuICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW4tb3V0O1xuICAtbW96LXRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW4tb3V0O1xuICAtby10cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlLWluLW91dDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZS1pbi1vdXQ7IH1cblxuLnByb2plY3RzLW1vZGFsLnNob3cge1xuICBvcGFjaXR5OiAwLjc7XG4gIGZpbHRlcjogYWxwaGEob3BhY2l0eT03MCk7IH1cblxuLnByb2plY3QtZGV0YWlsLWxpc3Qge1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbjogMDtcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgd2lkdGg6IDEwMCU7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwcHg7XG4gIGxlZnQ6IDBweDtcbiAgei1pbmRleDogMTAwMDtcbiAgZGlzcGxheTogbm9uZTsgfVxuICAucHJvamVjdC1kZXRhaWwtbGlzdCAucHJvamVjdC1kZXRhaWwge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgZGlzcGxheTogbm9uZTsgfVxuICAgIC5wcm9qZWN0LWRldGFpbC1saXN0IC5wcm9qZWN0LWRldGFpbCAubGVmdGRpdiB7XG4gICAgICB3aWR0aDogNjIuNSU7XG4gICAgICBoZWlnaHQ6IGluaGVyaXQ7XG4gICAgICBvdmVyZmxvdzogYXV0bztcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHRvcDogMDtcbiAgICAgIGxlZnQ6IC02Mi41JTtcbiAgICAgIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIDAuNnMgZWFzZTtcbiAgICAgIC1tb3otdHJhbnNpdGlvbjogYWxsIDAuNnMgZWFzZTtcbiAgICAgIC1vLXRyYW5zaXRpb246IGFsbCAwLjZzIGVhc2U7XG4gICAgICB0cmFuc2l0aW9uOiBhbGwgMC42cyBlYXNlOyB9XG4gICAgICAucHJvamVjdC1kZXRhaWwtbGlzdCAucHJvamVjdC1kZXRhaWwgLmxlZnRkaXYgdWwge1xuICAgICAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gICAgICAgIHBhZGRpbmc6IDYwcHggNDBweDtcbiAgICAgICAgbWFyZ2luOiAwOyB9XG4gICAgICAgIC5wcm9qZWN0LWRldGFpbC1saXN0IC5wcm9qZWN0LWRldGFpbCAubGVmdGRpdiB1bCBsaSB7XG4gICAgICAgICAgbWFyZ2luOiAwIGF1dG8gMTBweDtcbiAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cbiAgICAgICAgICAucHJvamVjdC1kZXRhaWwtbGlzdCAucHJvamVjdC1kZXRhaWwgLmxlZnRkaXYgdWwgbGkgaW1nIHtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlOyB9XG4gICAgICAgICAgLnByb2plY3QtZGV0YWlsLWxpc3QgLnByb2plY3QtZGV0YWlsIC5sZWZ0ZGl2IHVsIGxpIGltZy52ZXJ0aWNhbCB7XG4gICAgICAgICAgICB3aWR0aDogNTAlOyB9XG4gICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAgIC5wcm9qZWN0LWRldGFpbC1saXN0IC5wcm9qZWN0LWRldGFpbCAubGVmdGRpdiB7XG4gICAgICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG4gICAgLnByb2plY3QtZGV0YWlsLWxpc3QgLnByb2plY3QtZGV0YWlsIC5sZWZ0ZGl2LnNob3cge1xuICAgICAgbGVmdDogMDsgfVxuICAgIC5wcm9qZWN0LWRldGFpbC1saXN0IC5wcm9qZWN0LWRldGFpbCAucmlnaHRkaXYge1xuICAgICAgd2lkdGg6IDM3LjUlO1xuICAgICAgaGVpZ2h0OiBpbmhlcml0O1xuICAgICAgb3ZlcmZsb3c6IHNjcm9sbDtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICB0b3A6IDA7XG4gICAgICByaWdodDogLTM3LjUlO1xuICAgICAgLXdlYmtpdC10cmFuc2l0aW9uOiBhbGwgMC42cyBlYXNlO1xuICAgICAgLW1vei10cmFuc2l0aW9uOiBhbGwgMC42cyBlYXNlO1xuICAgICAgLW8tdHJhbnNpdGlvbjogYWxsIDAuNnMgZWFzZTtcbiAgICAgIHRyYW5zaXRpb246IGFsbCAwLjZzIGVhc2U7IH1cbiAgICAgIC5wcm9qZWN0LWRldGFpbC1saXN0IC5wcm9qZWN0LWRldGFpbCAucmlnaHRkaXYgaDIge1xuICAgICAgICBjb2xvcjogIzEyMTIxMjtcbiAgICAgICAgbWFyZ2luOiA2MHB4IDQwcHggMTBweDsgfVxuICAgICAgLnByb2plY3QtZGV0YWlsLWxpc3QgLnByb2plY3QtZGV0YWlsIC5yaWdodGRpdiBoNSB7XG4gICAgICAgIG1hcmdpbjogMCA0MHB4IDMwcHg7IH1cbiAgICAgIC5wcm9qZWN0LWRldGFpbC1saXN0IC5wcm9qZWN0LWRldGFpbCAucmlnaHRkaXYgcCB7XG4gICAgICAgIG1hcmdpbjogMTBweCA0MHB4O1xuICAgICAgICBmb250LXdlaWdodDogMzAwO1xuICAgICAgICBsaW5lLWhlaWdodDogMjsgfVxuICAgICAgLnByb2plY3QtZGV0YWlsLWxpc3QgLnByb2plY3QtZGV0YWlsIC5yaWdodGRpdiBwOmZpcnN0LWNoaWxkIHtcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDYwcHg7IH1cbiAgICAgIC5wcm9qZWN0LWRldGFpbC1saXN0IC5wcm9qZWN0LWRldGFpbCAucmlnaHRkaXYgcC5idXR0b24tbGluayB7XG4gICAgICAgIHBhZGRpbmc6IDIwcHggMDtcbiAgICAgICAgdGV4dC1hbGlnbjogbGVmdDsgfVxuICAgICAgLnByb2plY3QtZGV0YWlsLWxpc3QgLnByb2plY3QtZGV0YWlsIC5yaWdodGRpdiBhLmJ1dHRvbiB7XG4gICAgICAgIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuICAgICAgLnByb2plY3QtZGV0YWlsLWxpc3QgLnByb2plY3QtZGV0YWlsIC5yaWdodGRpdiBzcGFuLmNsb3NlLW1vZGFsIHtcbiAgICAgICAgZm9udC1zaXplOiA1NnB4O1xuICAgICAgICBjb2xvcjogIzk3OTc5NztcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICB0b3A6IDA7XG4gICAgICAgIHJpZ2h0OiA0MHB4O1xuICAgICAgICBjdXJzb3I6IHBvaW50ZXI7IH1cbiAgICAgICAgLnByb2plY3QtZGV0YWlsLWxpc3QgLnByb2plY3QtZGV0YWlsIC5yaWdodGRpdiBzcGFuLmNsb3NlLW1vZGFsOmhvdmVyIHtcbiAgICAgICAgICBjb2xvcjogIzEyMTIxMjsgfVxuICAgICAgLnByb2plY3QtZGV0YWlsLWxpc3QgLnByb2plY3QtZGV0YWlsIC5yaWdodGRpdiB1bCB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcbiAgICAgICAgcGFkZGluZzogNDBweCA0MHB4O1xuICAgICAgICBtYXJnaW46IDA7IH1cbiAgICAgICAgLnByb2plY3QtZGV0YWlsLWxpc3QgLnByb2plY3QtZGV0YWlsIC5yaWdodGRpdiB1bCBsaSB7XG4gICAgICAgICAgbWFyZ2luOiAwIGF1dG8gMTBweDtcbiAgICAgICAgICAtd2Via2l0LWJveC1zaGFkb3c6IDBweCAwcHggM3B4IHJnYmEoMCwgMCwgMCwgMC4xNSk7XG4gICAgICAgICAgLW1vei1ib3gtc2hhZG93OiAwcHggMHB4IDNweCByZ2JhKDAsIDAsIDAsIDAuMTUpO1xuICAgICAgICAgIGJveC1zaGFkb3c6IDBweCAwcHggM3B4IHJnYmEoMCwgMCwgMCwgMC4xNSk7IH1cbiAgICAgICAgICAucHJvamVjdC1kZXRhaWwtbGlzdCAucHJvamVjdC1kZXRhaWwgLnJpZ2h0ZGl2IHVsIGxpIGltZyB7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTsgfVxuICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgICAucHJvamVjdC1kZXRhaWwtbGlzdCAucHJvamVjdC1kZXRhaWwgLnJpZ2h0ZGl2IHtcbiAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICByaWdodDogLTEwMCU7IH1cbiAgICAgICAgICAucHJvamVjdC1kZXRhaWwtbGlzdCAucHJvamVjdC1kZXRhaWwgLnJpZ2h0ZGl2IHVsIHtcbiAgICAgICAgICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gICAgICAgICAgLnByb2plY3QtZGV0YWlsLWxpc3QgLnByb2plY3QtZGV0YWlsIC5yaWdodGRpdiBwLmJ1dHRvbi1saW5rIHtcbiAgICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfSB9XG4gICAgLnByb2plY3QtZGV0YWlsLWxpc3QgLnByb2plY3QtZGV0YWlsIC5yaWdodGRpdi5zaG93IHtcbiAgICAgIHJpZ2h0OiAwOyB9XG4gICAgLnByb2plY3QtZGV0YWlsLWxpc3QgLnByb2plY3QtZGV0YWlsIC5tb2JpbGUtc2Nyb2xsYWJsZSB7XG4gICAgICAtd2Via2l0LW92ZXJmbG93LXNjcm9sbGluZzogdG91Y2g7IH1cblxuLmFib3V0IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAyMDA7XG4gIGhlaWdodDogMTAwJTsgfVxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmFib3V0IHtcbiAgICAgIGhlaWdodDogYXV0bzsgfSB9XG4gIC5hYm91dCAubGVmdGRpdiB7XG4gICAgd2lkdGg6IDM3LjUlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBtaW4taGVpZ2h0OiA1NDBweDtcbiAgICBmbG9hdDogbGVmdDtcbiAgICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9pbWFnZXMvYXZhdGFyLmpwZ1wiKSBjZW50ZXIgY2VudGVyIG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyOyB9XG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgLmFib3V0IC5sZWZ0ZGl2IHtcbiAgICAgICAgZGlzcGxheTogbm9uZTsgfSB9XG4gIC5hYm91dCAudG9wZGl2IHtcbiAgICBkaXNwbGF5OiBub25lO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IDUwcHggMDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZGRkZGOyB9XG4gICAgLmFib3V0IC50b3BkaXYgLndyYXBwZXIge1xuICAgICAgd2lkdGg6IDIwMHB4O1xuICAgICAgaGVpZ2h0OiAyMDBweDtcbiAgICAgIG1hcmdpbjogYXV0bztcbiAgICAgIGJvcmRlci1yYWRpdXM6IDIwMHB4O1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgIzk3OTc5NzsgfVxuICAgIC5hYm91dCAudG9wZGl2IC5hdmF0YXIge1xuICAgICAgd2lkdGg6IDE4MHB4O1xuICAgICAgaGVpZ2h0OiAxODBweDtcbiAgICAgIG1hcmdpbjogMTBweCBhdXRvO1xuICAgICAgYm9yZGVyLXJhZGl1czogMTgwcHg7XG4gICAgICBiYWNrZ3JvdW5kOiB1cmwoXCIuLi9pbWFnZXMvYXZhdGFyLmpwZ1wiKSBjZW50ZXIgY2VudGVyIG5vLXJlcGVhdDtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogYXV0byAxMDAlOyB9XG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgLmFib3V0IC50b3BkaXYge1xuICAgICAgICBkaXNwbGF5OiBibG9jazsgfSB9XG4gIC5hYm91dCAucmlnaHRkaXYge1xuICAgIHdpZHRoOiA2Mi41JTtcbiAgICBoZWlnaHQ6IGF1dG87XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIG1pbi1oZWlnaHQ6IDUwMHB4O1xuICAgIHBhZGRpbmctYm90dG9tOiA0MHB4O1xuICAgIGZsb2F0OiBsZWZ0O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgICAgLmFib3V0IC5yaWdodGRpdiB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBmbG9hdDogbm9uZTsgfSB9XG4gICAgLmFib3V0IC5yaWdodGRpdiBwIHtcbiAgICAgIG1heC13aWR0aDogNjQwcHg7XG4gICAgICBmb250LXdlaWdodDogMzAwO1xuICAgICAgbGluZS1oZWlnaHQ6IDI7XG4gICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgICAgbWFyZ2luOiBhdXRvO1xuICAgICAgcGFkZGluZzogNjBweCAxMDBweCAwO1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICAgICAuYWJvdXQgLnJpZ2h0ZGl2IHA6YmVmb3JlIHtcbiAgICAgICAgY29udGVudDogdXJsKFwiLi4vaW1hZ2VzL3F1b3RlLnN2Z1wiKTtcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICBsZWZ0OiAxOHB4OyB9XG4gICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAgIC5hYm91dCAucmlnaHRkaXYgcCB7XG4gICAgICAgICAgcGFkZGluZzogNjBweCA0MHB4IDA7IH1cbiAgICAgICAgICAuYWJvdXQgLnJpZ2h0ZGl2IHA6YmVmb3JlIHtcbiAgICAgICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgICAgIHRvcDogLTIwcHg7XG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogLTMwcHg7IH0gfVxuICAgIC5hYm91dCAucmlnaHRkaXYgLnJlc3VtZSB7XG4gICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgICBtYXJnaW46IDQwcHggYXV0bzsgfVxuICAgIC5hYm91dCAucmlnaHRkaXYgaDUge1xuICAgICAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgICAgIG1hcmdpbjogMTBweCAwOyB9XG4gICAgLmFib3V0IC5yaWdodGRpdiBoMiB7XG4gICAgICBwYWRkaW5nOiAxNXB4IDA7XG4gICAgICBmb250LXNpemU6IDMycHg7XG4gICAgICBjb2xvcjogIzVBNUE1QTsgfVxuICAgICAgLmFib3V0IC5yaWdodGRpdiBoMiBhIHtcbiAgICAgICAgbWFyZ2luOiAwIDE1cHg7IH1cbiAgICAgICAgLmFib3V0IC5yaWdodGRpdiBoMiBhOmhvdmVyIHtcbiAgICAgICAgICBjb2xvcjogIzEyMTIxMjsgfVxuICAgIC5hYm91dCAucmlnaHRkaXYgaDYge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBib3R0b206IDE1cHg7IH1cbiIsIkBjaGFyc2V0IFwidXRmLThcIjtcblxuLy8gKioqKioqKioqKioqKioqKioqKioqKipcbi8vICoqKiBDb2xvciBWYXJpYWJsZXMgKioqIFxuLy8gKioqKioqKioqKioqKioqKioqKioqKipcblxuJGJnLWxpZ2h0OiAjRkZGRkZGO1xuJGJnLWRhcms6ICMxMjEyMTI7XG4kdGV4dC1saWdodDogI0ZGRkZGRjtcbiR0ZXh0LWRhcms6ICMxMjEyMTI7XG4kYnRuLWRhcms6ICMxMjEyMTI7XG5cbi8vICoqKioqKioqKioqKioqXG4vLyAqKiogTWl4aW5zICoqKiBcbi8vICoqKioqKioqKioqKioqXG4gXG5AbWl4aW4gYm94LXNoYWRvdyggJHg6IDBweCwgJHk6IDBweCwgJGJsdXI6IDNweCwgJGNvbG9yOiByZ2JhKDAsMCwwLC4xNSkgKSB7XG5cdC13ZWJraXQtYm94LXNoYWRvdzogJHggJHkgJGJsdXIgJGNvbG9yO1xuXHQtbW96LWJveC1zaGFkb3c6ICR4ICR5ICRibHVyICRjb2xvcjtcblx0Ym94LXNoYWRvdzogJHggJHkgJGJsdXIgJGNvbG9yO1xufVxuIFxuQG1peGluIHRyYW5zaXRpb24oICRwcm9wZXJ0eTogYWxsLCAkZHVyYXRpb246IDFzLCAkZWFzaW5nOiBlYXNlICkge1xuXHQtd2Via2l0LXRyYW5zaXRpb246ICRwcm9wZXJ0eSAkZHVyYXRpb24gJGVhc2luZztcblx0LW1vei10cmFuc2l0aW9uOiAkcHJvcGVydHkgJGR1cmF0aW9uICRlYXNpbmc7XG5cdC1vLXRyYW5zaXRpb246ICRwcm9wZXJ0eSAkZHVyYXRpb24gJGVhc2luZztcblx0dHJhbnNpdGlvbjogJHByb3BlcnR5ICRkdXJhdGlvbiAkZWFzaW5nO1xufVxuXG5AbWl4aW4gb3BhY2l0eSgkb3BhY2l0eSkge1xuXHRvcGFjaXR5OiAkb3BhY2l0eTtcblx0JG9wYWNpdHlJRTogJG9wYWNpdHkgKiAxMDA7XG5cdGZpbHRlcjogYWxwaGEob3BhY2l0eT0kb3BhY2l0eUlFKTtcbn1cblxuJWNsZWFyZml4IHtcbiAgKnpvb206IDE7XG4gICY6YmVmb3JlLCAmOmFmdGVyIHtcbiAgICBjb250ZW50OiBcIiBcIjtcbiAgICBkaXNwbGF5OiB0YWJsZTtcbiAgfVxuICAmOmFmdGVyIHtcbiAgICBjbGVhcjogYm90aDtcbiAgfVxufVxuXG5cbkBtaXhpbiBicC1sYXJnZSB7XG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMjE2MHB4KSB7XG4gICAgQGNvbnRlbnQ7XG4gIH1cbn1cblxuQG1peGluIGJwLXNtYWxsIHtcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIEBjb250ZW50O1xuICB9XG59XG5cbkBtaXhpbiBrZXlmcmFtZXMoJGFuaW1hdGlvbi1uYW1lKSB7XG4gICAgQC13ZWJraXQta2V5ZnJhbWVzICN7JGFuaW1hdGlvbi1uYW1lfSB7XG4gICAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgICBALW1vei1rZXlmcmFtZXMgI3skYW5pbWF0aW9uLW5hbWV9IHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgfSAgXG4gICAgQC1tcy1rZXlmcmFtZXMgI3skYW5pbWF0aW9uLW5hbWV9IHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICAgIEAtby1rZXlmcmFtZXMgI3skYW5pbWF0aW9uLW5hbWV9IHtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgfSAgXG4gICAgQGtleWZyYW1lcyAjeyRhbmltYXRpb24tbmFtZX0ge1xuICAgICAgICBAY29udGVudDtcbiAgICB9XG59XG5cbkBtaXhpbiBhbmltYXRpb24oJHN0cikge1xuICAtd2Via2l0LWFuaW1hdGlvbjogI3skc3RyfTtcbiAgLW1vei1hbmltYXRpb246ICN7JHN0cn07XG4gIC1tcy1hbmltYXRpb246ICN7JHN0cn07XG4gIC1vLWFuaW1hdGlvbjogI3skc3RyfTtcbiAgYW5pbWF0aW9uOiAjeyRzdHJ9OyAgICAgIFxufVxuXG5cbi8vICoqKioqKioqKioqKioqKioqKlxuLy8gKioqIFR5cG9ncmFwaHkgKioqIFxuLy8gKioqKioqKioqKioqKioqKioqXG5cbiRiYXNlLWZvbnQtc2l6ZTogMTZweDtcbiRiYXNlLWxpbmUtaGVpZ2h0OiAxLjY4O1xuXG4kZm9udC13ZWlnaHQtbGlnaHQ6IDMwMDtcbiRmb250LXdlaWdodC1ub3JtYWw6IDQwMDtcbiRmb250LXdlaWdodC1tZWRpdW06IDUwMDtcbiRmb250LXdlaWdodC1ib2xkOiA3MDA7XG5cbmh0bWx7XG5cdGZvbnQtZmFtaWx5OiAnSGVsdmV0aWNhIE5ldWUnLCBIZWx2ZXRpY2EsIEFyaWFsLCBSb2JvdG8sIHNhbnMtc2VyaWY7XG5cdGZvbnQtc2l6ZTogJGJhc2UtZm9udC1zaXplO1xuXHRsaW5lLWhlaWdodDogMS41O1xuXHRjb2xvcjogJHRleHQtZGFyaztcbn1cblxuYm9keXtcblx0Ly9vdmVyZmxvdzogYXV0bztcbn1cblxuLm1vZGFsLW9wZW57XG5cdG92ZXJmbG93OiBoaWRkZW47XG59XG5cbmgxe1xuXHRmb250LXNpemU6IDU2cHg7XG5cdG1hcmdpbjogMDtcblx0QGluY2x1ZGUgYnAtc21hbGwge1xuXHRcdGZvbnQtc2l6ZTogMzJweDtcblx0fVxufVxuXG5oMntcblx0Zm9udC1zaXplOiAyOHB4O1xuXHRtYXJnaW46IDA7XG5cdGZvbnQtd2VpZ2h0OiAkZm9udC13ZWlnaHQtbWVkaXVtO1xuXHRAaW5jbHVkZSBicC1zbWFsbCB7XG5cdFx0Zm9udC1zaXplOiAyMHB4O1xuXHR9XG59XG5cbmgze1xuXHRmb250LXNpemU6IDI0cHg7XG5cdG1hcmdpbjogMDtcblx0Zm9udC13ZWlnaHQ6ICRmb250LXdlaWdodC1tZWRpdW07XG5cdEBpbmNsdWRlIGJwLXNtYWxsIHtcblx0XHRmb250LXNpemU6IDE4cHg7XG5cdH1cbn1cbmg0e1xuXHRmb250LXNpemU6IDIwcHg7XG5cdG1hcmdpbjogMDtcblx0Zm9udC13ZWlnaHQ6ICRmb250LXdlaWdodC1ub3JtYWw7XG5cdEBpbmNsdWRlIGJwLXNtYWxsIHtcblx0XHRmb250LXNpemU6IDE2cHg7XG5cdH1cbn1cbmg1e1xuXHRmb250LXNpemU6IDE2cHg7XG5cdG1hcmdpbjogMDtcblx0Zm9udC13ZWlnaHQ6ICRmb250LXdlaWdodC1ub3JtYWw7XG59XG5oNntcblx0Zm9udC1zaXplOiAxMnB4O1xuXHRtYXJnaW46IDA7XG5cdGZvbnQtd2VpZ2h0OiAkZm9udC13ZWlnaHQtbm9ybWFsO1xufVxuYXtcblx0Y29sb3I6IGluaGVyaXQ7XG5cdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuYS50ZXh0bGlua3tcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRvdmVyZmxvdzogaGlkZGVuO1xuXHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdCY6YmVmb3Jle1xuXHRcdGNvbnRlbnQ6XCJcIjtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIGhlaWdodDogMXB4O1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkdGV4dC1kYXJrO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIGxlZnQ6IDA7XG4gICAgICAgIGJvdHRvbTogLTJweDtcbiAgICAgICAgQGluY2x1ZGUgb3BhY2l0eSgwKTtcbiAgICAgICAgQGluY2x1ZGUgdHJhbnNpdGlvbiggYWxsLCAwLjNzLCBlYXNlLWluLW91dCk7XG5cdH1cblx0Jjpob3Zlcntcblx0XHQmOmJlZm9yZXtcblx0XHRcdEBpbmNsdWRlIG9wYWNpdHkoMSk7XG5cdFx0XHRib3R0b206IDJweDtcblx0XHR9XG5cdH1cblx0QGluY2x1ZGUgYnAtc21hbGwge1xuXHRcdCY6YmVmb3Jle1xuXHRcdFx0QGluY2x1ZGUgb3BhY2l0eSgxKTtcblx0XHRcdGJvdHRvbTogMnB4O1xuXHRcdH1cblx0fVxufVxuXG4vLyAqKioqKioqKioqKioqKioqKipcbi8vICoqKiAgIExheW91dCAgICoqKiBcbi8vICoqKioqKioqKioqKioqKioqKlxuXG4kemluZGV4LWJnOiAwO1xuJHppbmRleC1ob21lOiAxMDA7XG4kemluZGV4LW1haW46IDIwMDtcbiR6aW5kZXgtdG9wbmF2OiA1MDA7XG4kemluZGV4LW1vZGFsOiA5MDA7XG4kemluZGV4LW1vZGFsLWNvbnRlbnQ6IDEwMDA7XG5cbiRzaWRlLXBhZGRpbmc6IDQwcHg7XG4kc2lkZS1wYWRkaW5nLXNtOiAyMHB4O1xuXG4uYnV0dG9ue1xuXHRib3JkZXI6IDFweCBzb2xpZCAkYnRuLWRhcms7XG5cdGxpbmUtaGVpZ2h0OiA0OHB4O1xuXHRmb250LXdlaWdodDogJGZvbnQtd2VpZ2h0LWxpZ2h0O1xuXHRwYWRkaW5nOiAwIDUwcHg7XG5cdGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuXHRvdXRsaW5lOiBub25lO1xuXHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdEBpbmNsdWRlIHRyYW5zaXRpb24oIGFsbCwgMC4zcywgZWFzZS1pbi1vdXQpO1xuXHQmOmhvdmVye1xuXHRcdGJhY2tncm91bmQtY29sb3I6ICRidG4tZGFyaztcblx0XHRjb2xvcjogJHRleHQtbGlnaHQ7XG5cdH1cbn1cbi5idXR0b24uYXBwc3RvcmV7XG5cdHBhZGRpbmc6IDAgNDBweCAwIDcwcHg7XG5cdHNwYW4uaWNvbntcblx0XHRmb250LXNpemU6IDMycHg7XG5cdFx0bWFyZ2luOiAwIDhweDtcblx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0dG9wOiAwO1xuXHRcdGxlZnQ6IDMwcHg7XG5cdH1cbn1cblxuLy8gKioqKioqKioqKioqKioqKioqKipcbi8vICoqKiAgIEFuaW1hdGlvbiAgKioqIFxuLy8gKioqKioqKioqKioqKioqKioqKipcblxuQGluY2x1ZGUga2V5ZnJhbWVzKHNoaW5lKSB7XG4gICAwJSB7Y29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgLjgpOyB0ZXh0LXNoYWRvdzogMCAwcHggMTVweCByZ2JhKDAsIDAsIDAsIC45KTt9XG4gICA1MCUge2NvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDEpOyB0ZXh0LXNoYWRvdzogMCAxcHggMTVweCByZ2JhKDI1NSwgMjU1LCAyNTUsIC45KTt9XG4gICAxMDAlIHtjb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAuOCk7IHRleHQtc2hhZG93OiAwIDBweCAxNXB4IHJnYmEoMCwgMCwgMCwgLjkpO31cbn1cblxuLy8gKioqKioqKioqKioqKioqKioqXG4vLyAqKiogICBHbG9iYWwgICoqKiBcbi8vICoqKioqKioqKioqKioqKioqKlxuXG4kdG9wLW5hdi1oZWlnaHQ6IDcwcHg7XG4kdG9wLW5hdi1oZWlnaHQtc206IDUwcHg7XG5cbi50b3BuYXZ7XG5cdHdpZHRoOiAxMDAlO1xuXHRoZWlnaHQ6ICR0b3AtbmF2LWhlaWdodDtcblx0QGV4dGVuZCAlY2xlYXJmaXg7XG5cdHBvc2l0aW9uOiBmaXhlZDtcblx0dG9wOiAwcHg7XG5cdHotaW5kZXg6ICR6aW5kZXgtdG9wbmF2O1xuXHRAaW5jbHVkZSBicC1zbWFsbCB7XG5cdFx0aGVpZ2h0OiAkdG9wLW5hdi1oZWlnaHQtc207XG5cdH1cblx0LmxlZnRkaXZ7XG5cdFx0d2lkdGg6IDUwJTtcblx0XHRoZWlnaHQ6IGluaGVyaXQ7XG5cdFx0ZmxvYXQ6IGxlZnQ7XG5cdFx0YmFja2dyb3VuZC1jb2xvcjogJGJnLWxpZ2h0O1xuXHRcdGRpc3BsYXk6IGZsZXg7XG5cdFx0YWxpZ24taXRlbXM6IGNlbnRlcjtcblx0XHQubG9nb3tcblx0XHRcdHdpZHRoOiAzNnB4O1xuXHRcdFx0aGVpZ2h0OiAzNnB4OyBcblx0XHRcdGRpc3BsYXk6IGlubGluZS1ibG9jaztcblx0XHRcdG1hcmdpbjogMCAxNXB4IDAgJHNpZGUtcGFkZGluZztcblx0XHRcdGZpbGw6ICRiZy1kYXJrO1xuXHRcdFx0QGluY2x1ZGUgYnAtc21hbGwge1xuXHRcdFx0XHR3aWR0aDogMjRweDtcblx0XHRcdFx0aGVpZ2h0OiAyNHB4O1xuXHRcdFx0XHRtYXJnaW46IDAgMTBweCAwICRzaWRlLXBhZGRpbmctc207XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGgze1xuXHRcdFx0bGluZS1oZWlnaHQ6ICR0b3AtbmF2LWhlaWdodDtcblx0XHRcdGRpc3BsYXk6IGlubGluZS1ibG9jaztcblx0XHRcdHNwYW57XG5cdFx0XHRcdGZvbnQtd2VpZ2h0OiAkZm9udC13ZWlnaHQtbGlnaHQ7XG5cdFx0XHR9XG5cdFx0XHRAaW5jbHVkZSBicC1zbWFsbCB7XG5cdFx0XHRcdGxpbmUtaGVpZ2h0OiAkdG9wLW5hdi1oZWlnaHQtc207XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cdC5yaWdodGRpdntcblx0XHR3aWR0aDogNTAlO1xuXHRcdGhlaWdodDogaW5oZXJpdDtcblx0XHRmbG9hdDogbGVmdDtcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAkYmctZGFyaztcblx0XHRjb2xvcjogJHRleHQtbGlnaHQ7XG5cdFx0bmF2e1xuXHRcdFx0ZmxvYXQ6IHJpZ2h0O1xuXHRcdFx0bWFyZ2luLXJpZ2h0OiAkc2lkZS1wYWRkaW5nO1xuXHRcdFx0YXtcblx0XHRcdFx0Zm9udC13ZWlnaHQ6ICRmb250LXdlaWdodC1saWdodDtcblx0XHRcdFx0bGluZS1oZWlnaHQ6ICR0b3AtbmF2LWhlaWdodDtcblx0XHRcdFx0bWFyZ2luLWxlZnQ6IDQwcHg7XG5cdFx0XHRcdGRpc3BsYXk6IGlubGluZS1ibG9jaztcblx0XHRcdFx0b3ZlcmZsb3c6IGhpZGRlbjtcblx0XHRcdFx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRcdFx0XHRAaW5jbHVkZSBvcGFjaXR5KDAuOCk7XG5cdFx0XHRcdEBpbmNsdWRlIHRyYW5zaXRpb24oIGFsbCwgMC4zcywgZWFzZS1pbi1vdXQpO1xuXHRcdFx0XHQmOmJlZm9yZXtcblx0XHRcdFx0XHRjb250ZW50OlwiXCI7XG5cdFx0XHQgICAgICAgIHdpZHRoOiAxMDAlO1xuXHRcdFx0ICAgICAgICBoZWlnaHQ6IDFweDtcblx0XHRcdCAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHRleHQtbGlnaHQ7XG5cdFx0XHQgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0XHRcdCAgICAgICAgbGVmdDogMDtcblx0XHRcdCAgICAgICAgYm90dG9tOiAxNHB4O1xuXHRcdFx0ICAgICAgICBAaW5jbHVkZSBvcGFjaXR5KDApO1xuXHRcdFx0ICAgICAgICBAaW5jbHVkZSB0cmFuc2l0aW9uKCBhbGwsIDAuM3MsIGVhc2UtaW4tb3V0KTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdCY6aG92ZXJ7XG5cdFx0XHRcdFx0QGluY2x1ZGUgb3BhY2l0eSgxKTtcblx0XHRcdFx0XHQmOmJlZm9yZXtcblx0XHRcdFx0XHRcdEBpbmNsdWRlIG9wYWNpdHkoMSk7XG5cdFx0XHRcdFx0XHRib3R0b206IDIwcHg7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHQvLyBhLmFjdGl2ZXtcblx0XHRcdC8vIFx0JjpiZWZvcmV7XG5cdFx0XHQvLyBcdFx0QGluY2x1ZGUgb3BhY2l0eSgxMDApO1xuXHRcdFx0Ly8gXHRcdGJvdHRvbTogMjRweDtcblx0XHRcdC8vIFx0fVxuXHRcdFx0Ly8gfVxuXHRcdFx0QGluY2x1ZGUgYnAtc21hbGwge1xuXHRcdFx0XHRkaXNwbGF5OiBub25lO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRhLmljb257XG5cdFx0XHRmb250LXNpemU6IDMycHg7XG5cdFx0XHRsaW5lLWhlaWdodDogJHRvcC1uYXYtaGVpZ2h0LXNtO1xuXHRcdFx0ZmxvYXQ6IHJpZ2h0O1xuXHRcdFx0cGFkZGluZzogMCAkc2lkZS1wYWRkaW5nLXNtO1xuXHRcdFx0ZGlzcGxheTogbm9uZTtcblx0XHRcdEBpbmNsdWRlIGJwLXNtYWxsIHtcblx0XHRcdFx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxufVxuXG4vLyAqKioqKioqKioqKioqKioqKipcbi8vICoqKiAgICBIb21lICAgKioqIFxuLy8gKioqKioqKioqKioqKioqKioqXG5cbi5ob21le1xuXHR3aWR0aDogMTAwJTtcblx0aGVpZ2h0OiAxMDB2aDtcblx0bWluLWhlaWdodDogNjAwcHg7XG5cdEBleHRlbmQgJWNsZWFyZml4O1xuXHRwb3NpdGlvbjogZml4ZWQ7XG5cdHRvcDogMHB4O1xuXHR6LWluZGV4OiAkemluZGV4LWhvbWU7XG5cdGgxe1xuXHRcdG1hcmdpbi10b3A6IDIwdmg7XG5cdFx0Zm9udC13ZWlnaHQ6ICRmb250LXdlaWdodC1saWdodDtcblx0XHRsaW5lLWhlaWdodDogMS4yO1xuXHRcdEBpbmNsdWRlIGJwLXNtYWxsIHtcblx0XHRcdG1hcmdpbi10b3A6IDA7XG5cdFx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0XHR0b3A6IDIwJTtcblx0XHRcdGxpbmUtaGVpZ2h0OiAxLjU7XG5cdFx0fVxuXHR9XG5cdHB7XG5cdFx0bWFyZ2luLXRvcDogMjB2aDtcblx0XHRmb250LXdlaWdodDogJGZvbnQtd2VpZ2h0LWxpZ2h0O1xuXHRcdHBhZGRpbmc6IDAgMzBweDtcblx0XHRAaW5jbHVkZSBicC1zbWFsbCB7XG5cdFx0XHRkaXNwbGF5OiBub25lO1xuXHRcdH1cblx0fVxuXHRoNXtcblx0XHRtYXJnaW4tdG9wOiAxMHZoO1xuXHRcdGZvbnQtd2VpZ2h0OiAkZm9udC13ZWlnaHQtbGlnaHQ7XG5cdFx0QGluY2x1ZGUgYnAtc21hbGwge1xuXHRcdFx0ZGlzcGxheTogbm9uZTtcblx0XHR9XG5cdH1cblx0LmxlZnRkaXZ7XG5cdFx0d2lkdGg6IDUwJTtcblx0XHRoZWlnaHQ6IGluaGVyaXQ7XG5cdFx0bWluLWhlaWdodDogNjAwcHg7XG5cdFx0ZmxvYXQ6IGxlZnQ7XG5cdFx0YmFja2dyb3VuZC1jb2xvcjogJGJnLWxpZ2h0O1xuXHRcdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0XHRvdmVyZmxvdzogaGlkZGVuO1xuXHRcdGltZ3tcblx0XHRcdGhlaWdodDogMTAwJTtcblx0XHRcdG1pbi1oZWlnaHQ6IDYwMHB4O1xuXHRcdFx0cG9zaXRpb246IGFic29sdXRlO1xuXHRcdFx0ei1pbmRleDogJHppbmRleC1iZztcblx0XHRcdEBpbmNsdWRlIG9wYWNpdHkoMC44KTtcblx0XHR9XG5cdFx0aDF7XG5cdFx0XHR0ZXh0LWFsaWduOiByaWdodDtcblx0XHRcdHBhZGRpbmc6IDAgMzBweCAwIDE4cHg7XG5cdFx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0XHR6LWluZGV4OiAkemluZGV4LWhvbWU7XG5cdFx0fVxuXHRcdHB7XG5cdFx0XHR0ZXh0LWFsaWduOiByaWdodDtcblx0XHR9XG5cdFx0aDV7XG5cdFx0XHR0ZXh0LWFsaWduOiByaWdodDtcblx0XHR9XG5cdH1cblx0LnJpZ2h0ZGl2e1xuXHRcdHdpZHRoOiA1MCU7XG5cdFx0aGVpZ2h0OiBpbmhlcml0O1xuXHRcdG1pbi1oZWlnaHQ6IDYwMHB4O1xuXHRcdGZsb2F0OiBsZWZ0O1xuXHRcdGJhY2tncm91bmQtY29sb3I6ICRiZy1kYXJrO1xuXHRcdGNvbG9yOiAkdGV4dC1saWdodDtcblx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0b3ZlcmZsb3c6IGhpZGRlbjtcblx0XHRpbWd7XG5cdFx0XHRoZWlnaHQ6IDEwMCU7XG5cdFx0XHRtaW4taGVpZ2h0OiA2MDBweDtcblx0XHRcdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0XHRcdHJpZ2h0OiAwO1xuXHRcdFx0ei1pbmRleDogJHppbmRleC1iZztcblx0XHRcdEBpbmNsdWRlIG9wYWNpdHkoMC44KTtcblx0XHR9XG5cdFx0aDF7XG5cdFx0XHR0ZXh0LWFsaWduOiBsZWZ0O1xuXHRcdFx0cGFkZGluZy1sZWZ0OiAzMHB4O1xuXHRcdH1cblx0XHRwe1xuXHRcdFx0dGV4dC1hbGlnbjogbGVmdDtcblx0XHR9XG5cdFx0aDV7XG5cdFx0XHR0ZXh0LWFsaWduOiBsZWZ0O1xuXHRcdH1cblx0fVxuXHQubGVmdC1sb29we1xuXHRcdG1hcmdpbi1yaWdodDogLTU1cHg7XG5cdFx0bWFyZ2luLXRvcDogNjBweDtcblx0XHRAZXh0ZW5kICVjbGVhcmZpeDtcblx0XHRAaW5jbHVkZSBicC1zbWFsbCB7XG5cdFx0XHRtYXJnaW46IDA7XG5cdFx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0XHRyaWdodDogLTU1cHg7XG5cdFx0XHR0b3A6IDYwJTtcblx0XHR9XG5cdFx0c3Zne1xuXHRcdFx0ZmxvYXQ6IHJpZ2h0O1xuXHRcdH1cblx0XHRwYXRoIHtcblx0XHRcdGZpbGw6IG5vbmU7XG5cdFx0XHRzdHJva2U6ICRiZy1kYXJrO1xuXHRcdFx0c3Ryb2tlLXdpZHRoOiA4cHg7XG5cdFx0fVxuXG5cdFx0Y2lyY2xlIHtcblx0XHRcdGZpbGw6ICRiZy1saWdodDtcblx0XHR9XG5cdH1cblx0LnJpZ2h0LWxvb3B7XG5cdFx0bWFyZ2luLWxlZnQ6IC01NXB4O1xuXHRcdG1hcmdpbi10b3A6IDYwcHg7XG5cdFx0QGV4dGVuZCAlY2xlYXJmaXg7XG5cdFx0QGluY2x1ZGUgYnAtc21hbGwge1xuXHRcdFx0bWFyZ2luOiAwO1xuXHRcdFx0cG9zaXRpb246IGFic29sdXRlO1xuXHRcdFx0bGVmdDogLTU1cHg7XG5cdFx0XHR0b3A6IDYwJTtcblx0XHR9XG5cdFx0c3Zne1xuXHRcdFx0ZmxvYXQ6IGxlZnQ7XG5cdFx0fVxuXHRcdHBhdGgge1xuXHRcdFx0ZmlsbDogbm9uZTtcblx0XHRcdHN0cm9rZTogJGJnLWxpZ2h0O1xuXHRcdFx0c3Ryb2tlLXdpZHRoOiA4cHg7XG5cdFx0fVxuXG5cdFx0Y2lyY2xlIHtcblx0XHRcdHN0cm9rZS13aWR0aDogMXB4O1xuXHRcdFx0c3Ryb2tlOiRiZy1kYXJrO1xuXHRcdFx0ZmlsbDogJGJnLWRhcms7XG5cdFx0fVxuXHR9XG59XG5cbi8vICoqKioqKioqKioqKioqKioqKlxuLy8gKioqICBQb3JqZWN0cyAgKioqIFxuLy8gKioqKioqKioqKioqKioqKioqXG5cbi5wcm9qZWN0c3tcblx0bWFyZ2luLXRvcDogMTAwdmg7XG5cdHBvc2l0aW9uOiByZWxhdGl2ZTtcblx0ei1pbmRleDogJHppbmRleC1tYWluO1xuXHR1bC5wcm9qZWN0cy1saXN0e1xuXHRcdGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcblx0XHRtYXJnaW46MDtcblx0XHRwYWRkaW5nOjA7XG5cdFx0bGl7XG5cdFx0XHR3aWR0aDogMTAwJTtcblx0XHRcdGhlaWdodDogMzAwcHg7XG5cdFx0XHRjb2xvcjogJHRleHQtbGlnaHQ7XG5cdFx0XHRjdXJzb3I6IHBvaW50ZXI7XG5cdFx0XHRAaW5jbHVkZSBicC1zbWFsbCB7XG5cdFx0XHRcdGhlaWdodDogMjAwcHg7XG5cdFx0XHR9XG5cdFx0XHRoNC5vcmd7XG5cdFx0XHRcdHBhZGRpbmc6IDI1cHggJHNpZGUtcGFkZGluZztcblx0XHRcdFx0dGV4dC1hbGlnbjogcmlnaHQ7XG5cdFx0XHRcdGZvbnQtd2VpZ2h0OiAkZm9udC13ZWlnaHQtbm9ybWFsO1xuXHRcdFx0XHRAaW5jbHVkZSBicC1zbWFsbCB7XG5cdFx0XHRcdFx0cGFkZGluZzogMjBweCAkc2lkZS1wYWRkaW5nLXNtO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRoMXtcblx0XHRcdFx0cGFkZGluZy10b3A6IDBweDtcblx0XHRcdFx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHRcdFx0XHQvL0BpbmNsdWRlIGFuaW1hdGlvbignc2hpbmUgM3MgZWFzZSA0LjVzIGluZmluaXRlJyk7XG5cdFx0XHR9XG5cdFx0XHRoNC5yb2xle1xuXHRcdFx0XHRwYWRkaW5nLXRvcDogMjBweDtcblx0XHRcdFx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHRcdFx0XHRmb250LXdlaWdodDogJGZvbnQtd2VpZ2h0LWxpZ2h0O1xuXHRcdFx0XHRAaW5jbHVkZSBicC1zbWFsbCB7XG5cdFx0XHRcdFx0cGFkZGluZy10b3A6IDEwcHg7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdCY6aG92ZXJ7XG5cdFx0XHRcdGgxe1xuXHRcdFx0XHRcdEBpbmNsdWRlIGFuaW1hdGlvbignc2hpbmUgZWFzZSAzcyBpbmZpbml0ZScpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGxpOm50aC1jaGlsZCgxKXtcblx0XHRcdGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChyZ2JhKDAsMCwwLC41KSwgcmdiYSgwLDAsMCwuNSkpLCB1cmwoJy4uL2ltYWdlcy9zaXE0bC5qcGcnKSBjZW50ZXIgMCUgbm8tcmVwZWF0O1xuXHRcdFx0YmFja2dyb3VuZC1zaXplOiAxMDAlO1xuXHRcdH1cblx0XHRsaTpudGgtY2hpbGQoMil7XG5cdFx0XHRiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQocmdiYSgwLDAsMCwuNSksIHJnYmEoMCwwLDAsLjUpKSwgdXJsKCcuLi9pbWFnZXMvbWUuanBnJykgY2VudGVyIDEwJSBuby1yZXBlYXQ7XG5cdFx0XHRiYWNrZ3JvdW5kLXNpemU6IDEwMCU7XG5cdFx0fVxuXHRcdGxpOm50aC1jaGlsZCgzKXtcblx0XHRcdGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudChyZ2JhKDAsMCwwLC41KSwgcmdiYSgwLDAsMCwuNSkpLCB1cmwoJy4uL2ltYWdlcy9zbS5qcGcnKSBjZW50ZXIgMTAlIG5vLXJlcGVhdDtcblx0XHRcdGJhY2tncm91bmQtc2l6ZTogMTAwJTtcblx0XHR9XG5cdH1cbn1cblxuLy8gKioqKioqKioqKioqKioqKioqKioqKioqXG4vLyAqKiogIFByb2plY3QgTW9kYWwgICAqKiogXG4vLyAqKioqKioqKioqKioqKioqKioqKioqKipcblxuLnByb2plY3RzLW1vZGFse1xuXHRoZWlnaHQ6IDEwMHZoO1xuXHR3aWR0aDogMTAwJTtcblx0cG9zaXRpb246IGZpeGVkO1xuXHR0b3A6IDBweDtcblx0bGVmdDogMHB4O1xuXHRvdmVyZmxvdzogaGlkZGVuO1xuXHR6LWluZGV4OiAkemluZGV4LW1vZGFsO1xuXHRiYWNrZ3JvdW5kLWNvbG9yOiAkYmctZGFyaztcblx0ZGlzcGxheTogbm9uZTtcblx0QGluY2x1ZGUgb3BhY2l0eSgwKTtcblx0QGluY2x1ZGUgdHJhbnNpdGlvbiggYWxsLCAwLjNzLCBlYXNlLWluLW91dCk7XG59XG4ucHJvamVjdHMtbW9kYWwuc2hvd3tcblx0QGluY2x1ZGUgb3BhY2l0eSgwLjcpO1xufVxuXG4ucHJvamVjdC1kZXRhaWwtbGlzdHtcblx0bGlzdC1zdHlsZS10eXBlOiBub25lO1xuXHRwYWRkaW5nOiAwO1xuXHRtYXJnaW46IDA7XG5cdGhlaWdodDogMTAwdmg7XG5cdHdpZHRoOiAxMDAlO1xuXHRwb3NpdGlvbjogZml4ZWQ7XG5cdHRvcDogMHB4O1xuXHRsZWZ0OiAwcHg7XG5cdHotaW5kZXg6ICR6aW5kZXgtbW9kYWwtY29udGVudDtcblx0ZGlzcGxheTogbm9uZTtcblx0LnByb2plY3QtZGV0YWlse1xuXHRcdHdpZHRoOiAxMDAlO1xuXHRcdGhlaWdodDogMTAwJTtcblx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0dG9wOiAwO1xuXHRcdGxlZnQ6IDA7XG5cdFx0ZGlzcGxheTogbm9uZTtcblx0XHQubGVmdGRpdntcblx0XHRcdHdpZHRoOiA2Mi41JTtcblx0XHRcdGhlaWdodDogaW5oZXJpdDtcblx0XHRcdG92ZXJmbG93OiBhdXRvO1xuXHRcdFx0cG9zaXRpb246IGFic29sdXRlO1xuXHRcdFx0dG9wOiAwO1xuXHRcdFx0bGVmdDogLTYyLjUlO1xuXHRcdFx0QGluY2x1ZGUgdHJhbnNpdGlvbiggYWxsLCAwLjZzLCBlYXNlKTtcblx0XHRcdHVse1xuXHRcdFx0XHRsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG5cdFx0XHRcdHBhZGRpbmc6IDYwcHggJHNpZGUtcGFkZGluZztcblx0XHRcdFx0bWFyZ2luOiAwO1xuXHRcdFx0XHRsaXtcblx0XHRcdFx0XHRtYXJnaW46IDAgYXV0byAxMHB4O1xuXHRcdFx0XHRcdHRleHQtYWxpZ246IGNlbnRlcjtcblx0XHRcdFx0XHRpbWd7XG5cdFx0XHRcdFx0XHR3aWR0aDogMTAwJTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aW1nLnZlcnRpY2Fse1xuXHRcdFx0XHRcdFx0d2lkdGg6IDUwJTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdEBpbmNsdWRlIGJwLXNtYWxsIHtcblx0XHRcdFx0ZGlzcGxheTogbm9uZTtcblx0XHRcdH1cblx0XHR9XG5cdFx0LmxlZnRkaXYuc2hvd3tcblx0XHRcdGxlZnQ6IDA7XG5cdFx0fVxuXHRcdC5yaWdodGRpdntcblx0XHRcdHdpZHRoOiAzNy41JTtcblx0XHRcdGhlaWdodDogaW5oZXJpdDtcblx0XHRcdG92ZXJmbG93OiBzY3JvbGw7XG5cdFx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAkYmctbGlnaHQ7XG5cdFx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0XHR0b3A6IDA7XG5cdFx0XHRyaWdodDogLTM3LjUlO1xuXHRcdFx0QGluY2x1ZGUgdHJhbnNpdGlvbiggYWxsLCAwLjZzLCBlYXNlKTtcblx0XHRcdGgye1xuXHRcdFx0XHRjb2xvcjogJGJ0bi1kYXJrO1xuXHRcdFx0XHRtYXJnaW46IDYwcHggJHNpZGUtcGFkZGluZyAxMHB4O1xuXHRcdFx0fVxuXHRcdFx0aDV7XG5cdFx0XHRcdG1hcmdpbjogMCAkc2lkZS1wYWRkaW5nIDMwcHg7XG5cdFx0XHR9XG5cdFx0XHRwe1xuXHRcdFx0XHRtYXJnaW46IDEwcHggJHNpZGUtcGFkZGluZztcblx0XHRcdFx0Zm9udC13ZWlnaHQ6ICRmb250LXdlaWdodC1saWdodDtcblx0XHRcdFx0bGluZS1oZWlnaHQ6IDI7XG5cdFx0XHR9XG5cdFx0XHRwOmZpcnN0LWNoaWxke1xuXHRcdFx0XHRwYWRkaW5nLWJvdHRvbTogNjBweDtcblx0XHRcdH1cblx0XHRcdHAuYnV0dG9uLWxpbmt7XG5cdFx0XHRcdHBhZGRpbmc6IDIwcHggMDtcblx0XHRcdFx0dGV4dC1hbGlnbjogbGVmdDtcblx0XHRcdH1cblx0XHRcdGEuYnV0dG9ue1xuXHRcdFx0XHRkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG5cdFx0XHR9XG5cdFx0XHRzcGFuLmNsb3NlLW1vZGFse1xuXHRcdFx0XHRmb250LXNpemU6IDU2cHg7XG5cdFx0XHRcdGNvbG9yOiAjOTc5Nzk3O1xuXHRcdFx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0XHRcdHRvcDogMDtcblx0XHRcdFx0cmlnaHQ6ICRzaWRlLXBhZGRpbmc7XG5cdFx0XHRcdGN1cnNvcjogcG9pbnRlcjtcblx0XHRcdFx0Jjpob3Zlcntcblx0XHRcdFx0XHRjb2xvcjogJHRleHQtZGFyaztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0Ly9Gb3IgTW9iaWxlIEltYWdlIExpc3Rcblx0XHRcdHVse1xuXHRcdFx0XHRkaXNwbGF5OiBub25lO1xuXHRcdFx0XHRsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG5cdFx0XHRcdHBhZGRpbmc6IDQwcHggJHNpZGUtcGFkZGluZztcblx0XHRcdFx0bWFyZ2luOiAwO1xuXHRcdFx0XHRsaXtcblx0XHRcdFx0XHRtYXJnaW46IDAgYXV0byAxMHB4O1xuXHRcdFx0XHRcdGltZ3tcblx0XHRcdFx0XHRcdHdpZHRoOiAxMDAlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRAaW5jbHVkZSBib3gtc2hhZG93O1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdEBpbmNsdWRlIGJwLXNtYWxsIHtcblx0XHRcdFx0d2lkdGg6IDEwMCU7XG5cdFx0XHRcdHJpZ2h0OiAtMTAwJTtcblx0XHRcdFx0dWx7XG5cdFx0XHRcdFx0ZGlzcGxheTogYmxvY2s7XG5cdFx0XHRcdH1cblx0XHRcdFx0cC5idXR0b24tbGlua3tcblx0XHRcdFx0XHR0ZXh0LWFsaWduOiBjZW50ZXI7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdFx0LnJpZ2h0ZGl2LnNob3d7XG5cdFx0XHRyaWdodDogMDtcblx0XHR9XG5cdFx0Lm1vYmlsZS1zY3JvbGxhYmxle1xuXHRcdFx0LXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6IHRvdWNoO1xuXHRcdH1cblx0fVxufVxuXG4vLyAqKioqKioqKioqKioqKioqKipcbi8vICoqKiAgQWJvdXQgICAqKiogXG4vLyAqKioqKioqKioqKioqKioqKipcblxuLmFib3V0e1xuXHRAZXh0ZW5kICVjbGVhcmZpeDtcblx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHR6LWluZGV4OiAkemluZGV4LW1haW47XG5cdGhlaWdodDogMTAwJTtcblx0QGluY2x1ZGUgYnAtc21hbGwge1xuXHRcdGhlaWdodDogYXV0bztcblx0fVxuXHQubGVmdGRpdntcblx0XHR3aWR0aDogMzcuNSU7XG5cdFx0aGVpZ2h0OiAxMDAlO1xuXHRcdG1pbi1oZWlnaHQ6IDU0MHB4O1xuXHRcdGZsb2F0OiBsZWZ0O1xuXHRcdGJhY2tncm91bmQ6IHVybCgnLi4vaW1hZ2VzL2F2YXRhci5qcGcnKSBjZW50ZXIgY2VudGVyIG5vLXJlcGVhdDtcblx0XHRiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuXHRcdEBpbmNsdWRlIGJwLXNtYWxsIHtcblx0XHRcdGRpc3BsYXk6IG5vbmU7XG5cdFx0fVxuXHRcdC8vIEBpbmNsdWRlIGJwLWxhcmdlIHtcblx0XHQvLyBcdGJhY2tncm91bmQtc2l6ZTogMTAwJSBhdXRvO1xuXHRcdC8vIH1cblx0fVxuXHQudG9wZGl2e1xuXHRcdGRpc3BsYXk6IG5vbmU7XG5cdFx0d2lkdGg6IDEwMCU7XG5cdFx0cGFkZGluZzogNTBweCAwO1xuXHRcdGJhY2tncm91bmQtY29sb3I6ICRiZy1saWdodDtcblx0XHQud3JhcHBlcntcblx0XHRcdHdpZHRoOiAyMDBweDtcblx0XHRcdGhlaWdodDogMjAwcHg7XG5cdFx0XHRtYXJnaW46IGF1dG87XG5cdFx0XHRib3JkZXItcmFkaXVzOiAyMDBweDtcblx0XHRcdGJvcmRlcjogMXB4IHNvbGlkICM5Nzk3OTc7XG5cdFx0fVxuXHRcdC5hdmF0YXJ7XG5cdFx0XHR3aWR0aDogMTgwcHg7XG5cdFx0XHRoZWlnaHQ6IDE4MHB4O1xuXHRcdFx0bWFyZ2luOiAxMHB4IGF1dG87XG5cdFx0XHRib3JkZXItcmFkaXVzOiAxODBweDtcblx0XHRcdGJhY2tncm91bmQ6IHVybCgnLi4vaW1hZ2VzL2F2YXRhci5qcGcnKSBjZW50ZXIgY2VudGVyIG5vLXJlcGVhdDtcblx0XHRcdGJhY2tncm91bmQtc2l6ZTogYXV0byAxMDAlO1xuXHRcdH1cblx0XHRAaW5jbHVkZSBicC1zbWFsbCB7XG5cdFx0XHRkaXNwbGF5OiBibG9jaztcblx0XHR9XG5cdH1cblx0LnJpZ2h0ZGl2e1xuXHRcdHdpZHRoOiA2Mi41JTtcblx0XHRoZWlnaHQ6IGF1dG87XG5cdFx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHRcdG1pbi1oZWlnaHQ6IDUwMHB4O1xuXHRcdHBhZGRpbmctYm90dG9tOiA0MHB4O1xuXHRcdGZsb2F0OiBsZWZ0O1xuXHRcdGJhY2tncm91bmQtY29sb3I6ICRiZy1saWdodDtcblx0XHRwb3NpdGlvbjogcmVsYXRpdmU7XG5cdFx0QGluY2x1ZGUgYnAtc21hbGwge1xuXHRcdFx0d2lkdGg6IDEwMCU7XG5cdFx0XHRmbG9hdDogbm9uZTtcblx0XHR9XG5cdFx0cHtcblx0XHRcdG1heC13aWR0aDogNjQwcHg7XG5cdFx0XHRmb250LXdlaWdodDogJGZvbnQtd2VpZ2h0LWxpZ2h0O1xuXHRcdFx0bGluZS1oZWlnaHQ6IDI7XG5cdFx0XHR0ZXh0LWFsaWduOiBsZWZ0O1xuXHRcdFx0bWFyZ2luOiBhdXRvO1xuXHRcdFx0cGFkZGluZzogNjBweCAxMDBweCAwO1xuXHRcdFx0cG9zaXRpb246IHJlbGF0aXZlO1xuXHRcdFx0JjpiZWZvcmV7XG5cdFx0XHRcdGNvbnRlbnQ6IHVybCgnLi4vaW1hZ2VzL3F1b3RlLnN2ZycpO1xuXHRcdFx0XHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdFx0XHRcdGxlZnQ6IDE4cHg7XG5cdFx0XHR9XG5cdFx0XHRAaW5jbHVkZSBicC1zbWFsbCB7XG5cdFx0XHRcdHBhZGRpbmc6IDYwcHggNDBweCAwO1xuXHRcdFx0XHQmOmJlZm9yZXtcblx0XHRcdFx0XHRsZWZ0OiA1MCU7XG5cdFx0XHRcdFx0dG9wOiAtMjBweDtcblx0XHRcdFx0XHRtYXJnaW4tbGVmdDogLTMwcHg7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdFx0LnJlc3VtZXtcblx0XHRcdGRpc3BsYXk6IGlubGluZS1ibG9jaztcblx0XHRcdG1hcmdpbjogNDBweCBhdXRvO1xuXHRcdH1cblx0XHRoNXtcblx0XHRcdGZvbnQtd2VpZ2h0OiAkZm9udC13ZWlnaHQtbGlnaHQ7XG5cdFx0XHRtYXJnaW46IDEwcHggMDtcblx0XHR9XG5cdFx0aDJ7XG5cdFx0XHRwYWRkaW5nOiAxNXB4IDA7XG5cdFx0XHRmb250LXNpemU6IDMycHg7XG5cdFx0XHRjb2xvcjogIzVBNUE1QTtcblx0XHRcdGF7XG5cdFx0XHRcdG1hcmdpbjogMCAxNXB4O1xuXHRcdFx0XHQmOmhvdmVye1xuXHRcdFx0XHRcdGNvbG9yOiAkYmctZGFyaztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0XHRoNntcblx0XHRcdHdpZHRoOiAxMDAlO1xuXHRcdFx0cG9zaXRpb246IGFic29sdXRlO1xuXHRcdFx0Ym90dG9tOiAxNXB4O1xuXHRcdH1cblx0fVxufSJdfQ== */
