/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

.topnav, .home, .home .left-loop, .home .right-loop, .about .section-content {
  *zoom: 1; }
  .topnav:before, .home:before, .home .left-loop:before, .home .right-loop:before, .about .section-content:before, .topnav:after, .home:after, .home .left-loop:after, .home .right-loop:after, .about .section-content:after {
    content: " ";
    display: table; }
  .topnav:after, .home:after, .home .left-loop:after, .home .right-loop:after, .about .section-content:after {
    clear: both; }

* {
  -webkit-box-sizing: border-box;
          box-sizing: border-box; }

html {
  font-family: 'Helvetica Neue', Helvetica, Arial, Roboto, sans-serif;
  font-size: 16px;
  line-height: 1.5;
  letter-spacing: 0.3px;
  color: #121212; }
  @media only screen and (max-width: 768px) {
    html {
      font-size: 14px; } }

.modal-open {
  overflow: hidden; }

h1 {
  font-size: 56px;
  margin: 0; }
  @media only screen and (max-width: 768px) {
    h1 {
      font-size: 32px; } }

h2 {
  font-size: 28px;
  margin: 0;
  font-weight: 500; }
  @media only screen and (max-width: 768px) {
    h2 {
      font-size: 20px; } }

h3 {
  font-size: 24px;
  margin: 0;
  font-weight: 500; }
  @media only screen and (max-width: 768px) {
    h3 {
      font-size: 18px; } }

h4 {
  font-size: 20px;
  margin: 0;
  font-weight: 400; }
  @media only screen and (max-width: 768px) {
    h4 {
      font-size: 16px; } }

h5 {
  font-size: 16px;
  margin: 0;
  font-weight: 400; }

h6 {
  font-size: 12px;
  margin: 0;
  font-weight: 400; }

a {
  color: inherit;
  text-decoration: none; }

a.textlink {
  position: relative;
  display: inline-block; }
  a.textlink:before {
    content: "";
    width: 100%;
    height: 1px;
    background-color: #121212;
    position: absolute;
    left: 0;
    bottom: -4px;
    opacity: 0;
    filter: alpha(opacity=0);
    -webkit-transition: all 0.3s ease-in-out;
    transition: all 0.3s ease-in-out; }
  a.textlink:hover:before {
    opacity: 1;
    filter: alpha(opacity=100);
    bottom: 0px; }
  @media only screen and (max-width: 768px) {
    a.textlink:before {
      opacity: 1;
      filter: alpha(opacity=100);
      bottom: 0px; } }

.button {
  border: 1px solid #121212;
  line-height: 48px;
  font-weight: 300;
  padding: 0 50px;
  background-color: transparent;
  outline: none;
  position: relative;
  display: inline-block;
  -webkit-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out; }
  .button:hover {
    background-color: #121212;
    color: #FFFFFF; }

.button.appstore {
  padding: 0 40px 0 70px; }
  .button.appstore span.icon {
    font-size: 32px;
    margin: 0 8px;
    position: absolute;
    top: 0;
    left: 30px; }

.section-header {
  padding: 80px 0;
  text-align: center; }
  .section-header .section-icon {
    width: 96px;
    height: 96px;
    line-height: 96px;
    font-size: 60px;
    margin: 0 auto;
    border: 2px solid #121212;
    border-radius: 50%; }
    @media only screen and (max-width: 480px) {
      .section-header .section-icon {
        width: 80px;
        height: 80px;
        line-height: 80px;
        font-size: 48px; } }
  .section-header .section-description {
    width: 80%;
    max-width: 1152px;
    font-weight: 300;
    line-height: 2;
    margin: 40px auto 0;
    position: relative; }
    .section-header .section-description:before {
      font-size: 40px;
      position: absolute;
      left: -50px; }
    @media only screen and (max-width: 768px) {
      .section-header .section-description {
        width: auto;
        margin: 40px 90px 0; } }
    @media only screen and (max-width: 480px) {
      .section-header .section-description {
        margin: 40px 20px 0; }
        .section-header .section-description:before {
          display: none; } }

@-webkit-keyframes shine {
  0% {
    color: rgba(255, 255, 255, 0.8);
    text-shadow: 0 0px 15px rgba(0, 0, 0, 0.9); }
  50% {
    color: white;
    text-shadow: 0 1px 15px rgba(255, 255, 255, 0.9); }
  100% {
    color: rgba(255, 255, 255, 0.8);
    text-shadow: 0 0px 15px rgba(0, 0, 0, 0.9); } }

@keyframes shine {
  0% {
    color: rgba(255, 255, 255, 0.8);
    text-shadow: 0 0px 15px rgba(0, 0, 0, 0.9); }
  50% {
    color: white;
    text-shadow: 0 1px 15px rgba(255, 255, 255, 0.9); }
  100% {
    color: rgba(255, 255, 255, 0.8);
    text-shadow: 0 0px 15px rgba(0, 0, 0, 0.9); } }

.topnav {
  width: 100%;
  height: 70px;
  top: 0px; }
  @media only screen and (max-width: 768px) {
    .topnav {
      height: 50px; } }
  .topnav .leftdiv {
    width: 50%;
    height: inherit;
    float: left;
    background-color: #FAFAFA;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center; }
    .topnav .leftdiv .logo {
      width: 36px;
      height: 36px;
      display: inline-block;
      margin: 0 15px 0 40px;
      fill: #121212; }
      @media only screen and (max-width: 768px) {
        .topnav .leftdiv .logo {
          width: 24px;
          height: 24px;
          margin: 0 10px 0 20px; } }
    .topnav .leftdiv h3 {
      line-height: 70px;
      display: inline-block; }
      .topnav .leftdiv h3 span {
        font-weight: 300; }
      @media only screen and (max-width: 768px) {
        .topnav .leftdiv h3 {
          line-height: 50px; } }
  .topnav .rightdiv {
    width: 50%;
    height: inherit;
    float: left;
    background-color: #121212;
    color: #FFFFFF; }
    .topnav .rightdiv nav {
      float: right;
      margin-right: 40px; }
      .topnav .rightdiv nav a {
        font-weight: 300;
        line-height: 70px;
        margin-left: 40px;
        display: inline-block;
        overflow: hidden;
        position: relative;
        opacity: 0.8;
        filter: alpha(opacity=80);
        -webkit-transition: all 0.3s ease-in-out;
        transition: all 0.3s ease-in-out; }
        .topnav .rightdiv nav a:before {
          content: "";
          width: 100%;
          height: 1px;
          background-color: #FFFFFF;
          position: absolute;
          left: 0;
          bottom: 14px;
          opacity: 0;
          filter: alpha(opacity=0);
          -webkit-transition: all 0.3s ease-in-out;
          transition: all 0.3s ease-in-out; }
        .topnav .rightdiv nav a:hover {
          opacity: 1;
          filter: alpha(opacity=100); }
          .topnav .rightdiv nav a:hover:before {
            opacity: 1;
            filter: alpha(opacity=100);
            bottom: 20px; }
      @media only screen and (max-width: 768px) {
        .topnav .rightdiv nav {
          display: none; } }
    .topnav .rightdiv a.icon {
      font-size: 32px;
      line-height: 50px;
      float: right;
      padding: 0 20px;
      display: none; }
      @media only screen and (max-width: 768px) {
        .topnav .rightdiv a.icon {
          display: inline-block; } }

.home {
  width: 100%;
  height: -webkit-calc(100vh - 70px);
  height: calc(100vh - 70px);
  min-height: 600px;
  top: 0px; }
  .home h1 {
    margin-top: 20vh;
    font-weight: 300;
    line-height: 1.2; }
    @media only screen and (max-width: 768px) {
      .home h1 {
        margin-top: 0;
        position: absolute;
        top: 20%;
        line-height: 1.5; } }
  .home p {
    margin-top: 20vh;
    font-weight: 300;
    padding: 0 30px; }
    @media only screen and (max-width: 768px) {
      .home p {
        display: none; } }
  .home h5 {
    margin-top: 10vh;
    font-weight: 300; }
    @media only screen and (max-width: 768px) {
      .home h5 {
        display: none; } }
  .home .leftdiv {
    width: 50%;
    height: inherit;
    min-height: 600px;
    float: left;
    background-color: #FAFAFA;
    position: relative;
    overflow: hidden; }
    .home .leftdiv img {
      height: 100%;
      min-height: 600px;
      position: absolute;
      z-index: 0;
      opacity: 0.8;
      filter: alpha(opacity=80); }
    .home .leftdiv h1 {
      text-align: right;
      padding: 0 30px 0 18px;
      position: relative;
      z-index: 100; }
    .home .leftdiv p {
      text-align: right; }
    .home .leftdiv h5 {
      text-align: right; }
  .home .rightdiv {
    width: 50%;
    height: inherit;
    min-height: 600px;
    float: left;
    background-color: #121212;
    color: #FFFFFF;
    position: relative;
    overflow: hidden; }
    .home .rightdiv img {
      height: 100%;
      min-height: 600px;
      position: absolute;
      right: 0;
      z-index: 0;
      opacity: 0.8;
      filter: alpha(opacity=80); }
    .home .rightdiv h1 {
      text-align: left;
      padding-left: 30px; }
    .home .rightdiv p {
      text-align: left; }
    .home .rightdiv h5 {
      text-align: left; }
  .home .left-loop {
    margin-right: -55px;
    margin-top: 60px; }
    @media only screen and (max-width: 768px) {
      .home .left-loop {
        margin: 0;
        position: absolute;
        right: -55px;
        top: 60%; } }
    .home .left-loop svg {
      float: right; }
    .home .left-loop path {
      fill: none;
      stroke: #121212;
      stroke-width: 8px; }
    .home .left-loop circle {
      fill: #FAFAFA; }
  .home .right-loop {
    margin-left: -55px;
    margin-top: 60px; }
    @media only screen and (max-width: 768px) {
      .home .right-loop {
        margin: 0;
        position: absolute;
        left: -55px;
        top: 60%; } }
    .home .right-loop svg {
      float: left; }
    .home .right-loop path {
      fill: none;
      stroke: #FAFAFA;
      stroke-width: 8px; }
    .home .right-loop circle {
      stroke-width: 1px;
      stroke: #121212;
      fill: #121212; }

.projects {
  position: relative;
  z-index: 200; }
  .projects ul.projects-list {
    list-style-type: none;
    margin: 0;
    padding: 0; }
    .projects ul.projects-list li {
      width: 100%;
      height: 300px;
      color: #FFFFFF;
      cursor: pointer; }
      @media only screen and (max-width: 768px) {
        .projects ul.projects-list li {
          height: 200px; } }
      .projects ul.projects-list li h4.org {
        padding: 25px 40px;
        text-align: right;
        font-weight: 400; }
        @media only screen and (max-width: 768px) {
          .projects ul.projects-list li h4.org {
            padding: 20px 20px; } }
      .projects ul.projects-list li h1 {
        padding-top: 0px;
        text-align: center; }
      .projects ul.projects-list li h4.role {
        padding-top: 20px;
        text-align: center;
        font-weight: 300; }
        @media only screen and (max-width: 768px) {
          .projects ul.projects-list li h4.role {
            padding-top: 10px; } }
      .projects ul.projects-list li:hover h1 {
        -webkit-animation: shine ease 3s infinite;
        animation: shine ease 3s infinite; }
    .projects ul.projects-list li:nth-child(1) {
      background: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.5)), to(rgba(0, 0, 0, 0.5))), url("../images/siq4l.jpg") center 0% no-repeat;
      background: -webkit-linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("../images/siq4l.jpg") center 0% no-repeat;
      background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("../images/siq4l.jpg") center 0% no-repeat;
      background-size: 100%; }
    .projects ul.projects-list li:nth-child(2) {
      background: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.5)), to(rgba(0, 0, 0, 0.5))), url("../images/me.jpg") center 10% no-repeat;
      background: -webkit-linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("../images/me.jpg") center 10% no-repeat;
      background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("../images/me.jpg") center 10% no-repeat;
      background-size: 100%; }
    .projects ul.projects-list li:nth-child(3) {
      background: -webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0.5)), to(rgba(0, 0, 0, 0.5))), url("../images/sm.jpg") center 10% no-repeat;
      background: -webkit-linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("../images/sm.jpg") center 10% no-repeat;
      background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5)), url("../images/sm.jpg") center 10% no-repeat;
      background-size: 100%; }

.projects-modal {
  height: 100vh;
  width: 100%;
  position: fixed;
  top: 0px;
  left: 0px;
  overflow: hidden;
  z-index: 900;
  background-color: #121212;
  display: none;
  opacity: 0;
  filter: alpha(opacity=0);
  -webkit-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out; }

.projects-modal.show {
  opacity: 0.7;
  filter: alpha(opacity=70); }

.project-detail-list {
  list-style-type: none;
  padding: 0;
  margin: 0;
  height: 100vh;
  width: 100%;
  position: fixed;
  top: 0px;
  left: 0px;
  z-index: 1000;
  display: none; }
  .project-detail-list .project-detail {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    display: none; }
    .project-detail-list .project-detail .leftdiv {
      width: 62.5%;
      height: inherit;
      overflow: auto;
      position: absolute;
      top: 0;
      left: -62.5%;
      -webkit-transition: all 0.6s ease;
      transition: all 0.6s ease; }
      .project-detail-list .project-detail .leftdiv ul {
        list-style-type: none;
        padding: 60px 40px;
        margin: 0; }
        .project-detail-list .project-detail .leftdiv ul li {
          margin: 0 auto 10px;
          text-align: center; }
          .project-detail-list .project-detail .leftdiv ul li img {
            width: 100%; }
          .project-detail-list .project-detail .leftdiv ul li img.vertical {
            width: 50%; }
      @media only screen and (max-width: 768px) {
        .project-detail-list .project-detail .leftdiv {
          display: none; } }
    .project-detail-list .project-detail .leftdiv.show {
      left: 0; }
    .project-detail-list .project-detail .rightdiv {
      width: 37.5%;
      height: inherit;
      overflow: scroll;
      background-color: #FAFAFA;
      position: absolute;
      top: 0;
      right: -37.5%;
      -webkit-transition: all 0.6s ease;
      transition: all 0.6s ease; }
      .project-detail-list .project-detail .rightdiv h2 {
        color: #121212;
        margin: 60px 40px 10px; }
      .project-detail-list .project-detail .rightdiv h5 {
        margin: 0 40px 30px; }
      .project-detail-list .project-detail .rightdiv p {
        margin: 10px 40px;
        font-weight: 300;
        line-height: 2; }
      .project-detail-list .project-detail .rightdiv p:first-child {
        padding-bottom: 60px; }
      .project-detail-list .project-detail .rightdiv p.button-link {
        padding: 20px 0;
        text-align: left; }
      .project-detail-list .project-detail .rightdiv a.button {
        display: inline-block; }
      .project-detail-list .project-detail .rightdiv span.close-modal {
        font-size: 56px;
        color: #979797;
        position: absolute;
        top: 0;
        right: 40px;
        cursor: pointer; }
        .project-detail-list .project-detail .rightdiv span.close-modal:hover {
          color: #121212; }
      .project-detail-list .project-detail .rightdiv ul {
        display: none;
        list-style-type: none;
        padding: 40px 40px;
        margin: 0; }
        .project-detail-list .project-detail .rightdiv ul li {
          margin: 0 auto 10px;
          -webkit-box-shadow: 0px 0px 3px rgba(0, 0, 0, 0.15);
          box-shadow: 0px 0px 3px rgba(0, 0, 0, 0.15); }
          .project-detail-list .project-detail .rightdiv ul li img {
            width: 100%; }
      @media only screen and (max-width: 768px) {
        .project-detail-list .project-detail .rightdiv {
          width: 100%;
          right: -100%; }
          .project-detail-list .project-detail .rightdiv ul {
            display: block; }
          .project-detail-list .project-detail .rightdiv p.button-link {
            text-align: center; } }
    .project-detail-list .project-detail .rightdiv.show {
      right: 0; }
    .project-detail-list .project-detail .mobile-scrollable {
      -webkit-overflow-scrolling: touch; }

.about {
  position: relative;
  z-index: 200; }
  .about .section-header .section-icon {
    font-size: 70px; }
  .about .section-content {
    height: 100%; }
    @media only screen and (max-width: 768px) {
      .about .section-content {
        height: auto; } }
  .about .leftdiv {
    width: 37.5%;
    height: 100%;
    min-height: 540px;
    float: left;
    background: url("../images/avatar.jpg") center center no-repeat;
    background-size: cover; }
    @media only screen and (max-width: 1200px) {
      .about .leftdiv {
        display: none; } }
  .about .topdiv {
    display: none;
    width: 100%;
    padding: 80px 0 60px;
    background-color: #FAFAFA; }
    .about .topdiv .wrapper {
      width: 30%;
      min-width: 200px;
      padding-top: 30%;
      min-height: 200px;
      margin: auto;
      border: 1px solid #979797;
      position: relative;
      border-radius: 50%; }
    .about .topdiv .avatar {
      width: -webkit-calc(100% - 20px);
      width: calc(100% - 20px);
      height: -webkit-calc(100% - 20px);
      height: calc(100% - 20px);
      border-radius: 50%;
      position: absolute;
      top: 10px;
      left: 10px;
      background: url("../images/avatar.jpg") center center no-repeat;
      background-size: auto 100%; }
    @media only screen and (max-width: 1200px) {
      .about .topdiv {
        display: block; } }
  .about .rightdiv {
    width: 62.5%;
    height: auto;
    text-align: center;
    min-height: 500px;
    padding: 40px 0;
    float: left;
    background-color: #FAFAFA;
    position: relative; }
    @media only screen and (max-width: 1200px) {
      .about .rightdiv {
        width: 100%;
        float: none;
        padding: 0; } }
    .about .rightdiv p {
      font-weight: 300;
      line-height: 2;
      text-align: left;
      padding: 10px 60px;
      margin: 0;
      position: relative; }
      @media only screen and (max-width: 1200px) {
        .about .rightdiv p {
          padding: 10px 40px; } }
      @media only screen and (max-width: 480px) {
        .about .rightdiv p {
          padding: 10px 20px; } }
    .about .rightdiv .resume {
      padding: 40px 60px 20px; }
      @media only screen and (max-width: 1200px) {
        .about .rightdiv .resume {
          text-align: center;
          padding: 40px 60px 80px; } }
  .about .section-footer {
    padding: 60px;
    text-align: center; }
    .about .section-footer h3 {
      display: inline-block;
      padding: 15px 30px;
      font-weight: 400;
      text-transform: uppercase;
      border-bottom: 1px solid #121212; }
      .about .section-footer h3:before {
        font-size: 40px;
        margin-right: 20px;
        position: relative;
        top: 5px; }
    .about .section-footer h5 {
      font-weight: 300;
      margin: 15px 0; }
    .about .section-footer h2 {
      padding: 15px 0;
      font-size: 32px;
      color: #5A5A5A; }
      .about .section-footer h2 a {
        margin: 0 15px; }
        .about .section-footer h2 a:hover {
          color: #121212; }
    .about .section-footer h6 {
      width: 100%;
      position: absolute;
      bottom: 15px; }

footer.page-footer {
  padding: 20px; }
  footer.page-footer p {
    color: #5A5A5A;
    font-size: 12px;
    margin: 0;
    line-height: 30px; }
  footer.page-footer .logo {
    width: 30px;
    height: 30px;
    display: inline-block;
    fill: #5A5A5A;
    float: right; }
  @media only screen and (max-width: 480px) {
    footer.page-footer p {
      text-align: center; }
    footer.page-footer .logo {
      display: none; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
